<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: http://leoeditor.com/leo_toc.html -->
<leo_file xmlns:leo="http://leoeditor.com/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="yen.20170108171605.1"><vh>@settings</vh>
<v t="yen.20170108171605.2"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="yen.20170108171605.3"><vh>@string initial_split_orientation = horizontal</vh></v>
</v>
<v t="yen.20170108171622.1"><vh>有關 2017springcd</vh></v>
<v t="yen.20170108171733.1" a="E"><vh>@path ../</vh>
<v t="yen.20170108171733.2"><vh>@button pelican-blog</vh></v>
<v t="yen.20170108171733.3"><vh>@edit README.md</vh></v>
<v t="yen.20170108171733.4"><vh>@edit .gitignore</vh></v>
<v t="yen.20170108171733.5"><vh>Pelican 設定</vh>
<v t="yen.20170108171733.6"><vh>@edit local_publishconf.py</vh></v>
<v t="yen.20170108171733.7"><vh>@edit pelicanconf.py</vh></v>
</v>
<v t="yen.20170215103217.1"><vh>編輯 template</vh>
<v t="yen.20170215103228.1" a="E"><vh>@path theme/pelican-bootstrap3_local/templates</vh>
<v t="yen.20170215103332.1"><vh>@edit base.html</vh></v>
</v>
</v>
<v t="yen.20170120110024.1" a="E"><vh>@clean index.html</vh>
<v t="yen.20170120110024.2" a="E"><vh>html</vh>
<v t="yen.20170120110024.3"><vh>head</vh></v>
<v t="yen.20170120110024.4" a="E"><vh>body</vh>
<v t="yen.20170120110024.5" a="E"><vh>reveal div</vh>
<v t="leo.20170303213004.1" a="E"><vh>slides div</vh>
<v t="leo.20170303213004.2"><vh>封面投影片</vh>
<v t="leo.20170303213004.3"><vh>封面投影片內容</vh></v>
</v>
<v t="leo.20170303213004.4"><vh>快捷鍵</vh>
<v t="leo.20170303213004.5"><vh>投影片快捷鍵</vh></v>
</v>
<v t="leo.20170303213004.6"><vh>20170222第一週上課筆記</vh>
<v t="leo.20170303213004.7"><vh>上課內容</vh>
<v t="leo.20170303213004.8"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170303213004.9"><vh>一</vh>
<v t="leo.20170303213004.10"><vh>課程大綱</vh></v>
</v>
<v t="leo.20170303213004.11"><vh>二-1</vh>
<v t="leo.20170303213004.12"><vh>了解如何使用stunnel</vh></v>
</v>
<v t="leo.20170303213004.13"><vh>(1)圖片</vh>
<v t="leo.20170303213004.14"><vh>圖片</vh></v>
</v>
<v t="leo.20170303213004.15"><vh>二-2</vh>
<v t="leo.20170303213004.16"><vh>了解如何使用stunnel</vh></v>
</v>
<v t="leo.20170303213004.17"><vh>(2)圖片</vh>
<v t="leo.20170303213004.18"><vh>圖片</vh></v>
</v>
<v t="leo.20170303213004.19"><vh>二-3</vh>
<v t="leo.20170303213004.20"><vh>了解如何使用stunnel</vh></v>
</v>
<v t="leo.20170303213004.21"><vh>(3)圖片</vh>
<v t="leo.20170303213004.22"><vh>圖片</vh></v>
</v>
<v t="leo.20170303213004.23"><vh>三-1</vh>
<v t="leo.20170303213004.24"><vh>python程式碼控制Vrep</vh></v>
</v>
<v t="leo.20170303213004.25"><vh>(4)圖片</vh>
<v t="leo.20170303213004.26"><vh>圖片</vh></v>
</v>
<v t="leo.20170303213004.27"><vh>(5)圖片</vh>
<v t="leo.20170303213004.28"><vh>圖片</vh></v>
</v>
<v t="leo.20170303213004.29"><vh>三-2</vh>
<v t="leo.20170303213004.30"><vh>python程式碼控制Vrep</vh></v>
</v>
<v t="leo.20170303213004.31"><vh>(6)圖片</vh>
<v t="leo.20170303213004.32"><vh>圖片</vh></v>
</v>
<v t="leo.20170303213004.33"><vh>影片</vh>
<v t="leo.20170303213004.34"><vh>第一週心得影片</vh></v>
</v>
<v t="leo.20170304213241.1"><vh>心得</vh>
<v t="leo.20170304213241.2"><vh>心得</vh></v>
</v>
</v>
<v t="leo.20170304202812.1"><vh>20170301第二週上課筆記</vh>
<v t="leo.20170304202812.2"><vh>上課內容</vh>
<v t="leo.20170304202812.3"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170304202812.4"><vh>一-1</vh>
<v t="leo.20170304202812.5"><vh>課程標題</vh></v>
</v>
<v t="leo.20170305173446.1"><vh>一-2</vh>
<v t="leo.20170305173446.2"><vh>課程內容</vh></v>
</v>
<v t="leo.20170305173211.1" a="E"><vh>一-3</vh>
<v t="leo.20170305173211.2"><vh>程式碼</vh></v>
</v>
<v t="leo.20170304202812.6"><vh>二-1</vh>
<v t="leo.20170304202812.7"><vh>標題</vh></v>
</v>
<v t="leo.20170305173806.1"><vh>二-2</vh>
<v t="leo.20170305173806.2"><vh>內容1</vh></v>
</v>
<v t="leo.20170304202812.8"><vh>(1)圖片</vh>
<v t="leo.20170304202812.9"><vh>圖片</vh></v>
</v>
<v t="leo.20170304202812.10"><vh>二-3</vh>
<v t="leo.20170304202812.11"><vh>內容2</vh></v>
</v>
<v t="leo.20170304202812.12"><vh>(2)圖片</vh>
<v t="leo.20170304202812.13"><vh>圖片</vh></v>
</v>
<v t="leo.20170304202812.14"><vh>二-4</vh>
<v t="leo.20170304202812.15"><vh>內容3</vh></v>
</v>
<v t="leo.20170304202812.16"><vh>(3)圖片</vh>
<v t="leo.20170304202812.17"><vh>圖片</vh></v>
</v>
<v t="leo.20170305174109.1"><vh>心得</vh>
<v t="leo.20170305174109.2"><vh>心得</vh></v>
</v>
<v t="leo.20170304202812.28"><vh>影片</vh>
<v t="leo.20170304202812.29"><vh>第二週心得影片</vh></v>
</v>
</v>
<v t="leo.20170312205719.1"><vh>20170308第三週上課筆記</vh>
<v t="leo.20170312205719.2"><vh>上課內容</vh>
<v t="leo.20170312205719.3"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170312210710.1"><vh>一-1</vh>
<v t="leo.20170312210710.2"><vh>心得</vh></v>
</v>
<v t="leo.20170312210721.1"><vh>一-2</vh>
<v t="leo.20170312210721.2"><vh>心得</vh></v>
</v>
<v t="leo.20170312210814.1"><vh>上課任務</vh>
<v t="leo.20170312210814.2"><vh>上課任務</vh></v>
</v>
<v t="leo.20170312210842.1"><vh>上課任務一</vh>
<v t="leo.20170312210842.2"><vh>上課任務</vh></v>
</v>
<v t="leo.20170312210848.1"><vh>上課任務二</vh>
<v t="leo.20170312210848.2"><vh>上課任務</vh></v>
</v>
<v t="leo.20170312211023.1"><vh>任務二圖片-1</vh>
<v t="leo.20170312211023.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170312211133.1"><vh>任務二圖片-2</vh>
<v t="leo.20170312211133.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170312211220.1"><vh>任務二圖片-3</vh>
<v t="leo.20170312211220.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170312210854.1"><vh>上課任務三</vh>
<v t="leo.20170312210854.2"><vh>上課任務</vh></v>
</v>
<v t="leo.20170312211322.1"><vh>任務三圖片-1</vh>
<v t="leo.20170312211322.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170312211354.1"><vh>作品1</vh>
<v t="leo.20170312211354.2"><vh>作品</vh></v>
</v>
<v t="leo.20170312211457.1"><vh>任務三圖片-2</vh>
<v t="leo.20170312211457.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170312211643.1"><vh>任務三圖片-3</vh>
<v t="leo.20170312211643.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170312211645.1"><vh>任務三圖片-4</vh>
<v t="leo.20170312211645.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170312210903.1"><vh>上課任務四</vh>
<v t="leo.20170312210903.2"><vh>上課任務</vh></v>
</v>
<v t="leo.20170312211830.1"><vh>任務四圖片-1</vh>
<v t="leo.20170312211830.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170312210910.1"><vh>上課任務五</vh>
<v t="leo.20170312210910.2"><vh>上課任務</vh></v>
</v>
<v t="leo.20170312212027.1"><vh>任務五圖片-1</vh>
<v t="leo.20170312212027.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170312212106.1"><vh>上課任務五-1</vh>
<v t="leo.20170312212106.2"><vh>上課任務</vh></v>
</v>
<v t="leo.20170312212209.1"><vh>任務五圖片-2</vh>
<v t="leo.20170312212209.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170312212235.1"><vh>上課任務五-2</vh>
<v t="leo.20170312212235.2"><vh>上課任務</vh></v>
</v>
<v t="leo.20170312205719.24"><vh>心得</vh>
<v t="leo.20170312205719.25"><vh>心得</vh></v>
</v>
<v t="leo.20170312205719.26"><vh>影片任務二</vh>
<v t="leo.20170312205719.27"><vh>第三週心得影片</vh></v>
</v>
<v t="leo.20170312210047.1"><vh>影片任務三</vh>
<v t="leo.20170312210047.2"><vh>第三週心得影片</vh></v>
</v>
<v t="leo.20170312210107.1"><vh>影片任務四五</vh>
<v t="leo.20170312210107.2"><vh>第三週心得影片</vh></v>
</v>
</v>
<v t="leo.20170325211224.1"><vh>20170315第四週上課筆記</vh>
<v t="leo.20170325211224.2"><vh>上課內容</vh>
<v t="leo.20170325211224.3"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170410195829.1"><vh>練習1</vh>
<v t="leo.20170410195829.2"><vh>練習1</vh></v>
</v>
<v t="leo.20170410200306.1"><vh>圖片1-1</vh>
<v t="leo.20170410200306.2"><vh>圖片1-1</vh></v>
</v>
<v t="leo.20170410195831.1"><vh>練習2</vh>
<v t="leo.20170410195831.2"><vh>練習2</vh></v>
</v>
<v t="leo.20170410200547.1"><vh>零件2-1</vh>
<v t="leo.20170410200547.2"><vh>零件2-1</vh></v>
</v>
<v t="leo.20170410195838.1"><vh>練習3</vh>
<v t="leo.20170410195838.2"><vh>練習3</vh></v>
</v>
<v t="leo.20170410200856.1"><vh>圖片3-1</vh>
<v t="leo.20170410200856.2"><vh>圖片3-1</vh></v>
</v>
<v t="leo.20170410201058.1"><vh>心得</vh>
<v t="leo.20170410201058.2"><vh>心得</vh></v>
</v>
<v t="leo.20170410203206.1"><vh>影片</vh>
<v t="leo.20170410203206.2"><vh>影片</vh></v>
</v>
<v t="leo.20170410201130.1"><vh>影片1</vh>
<v t="leo.20170410201130.2"><vh>影片1</vh></v>
</v>
<v t="leo.20170410202610.1"><vh>影片2</vh>
<v t="leo.20170410202610.2"><vh>影片2</vh></v>
</v>
<v t="leo.20170410202615.1"><vh>影片3</vh>
<v t="leo.20170410202615.2"><vh>影片3</vh></v>
</v>
<v t="leo.20170410202619.1"><vh>影片4</vh>
<v t="leo.20170410202619.2"><vh>影片4</vh></v>
</v>
</v>
<v t="leo.20170325211755.1"><vh>20170322第五週上課筆記</vh>
<v t="leo.20170325211755.2"><vh>上課筆記</vh>
<v t="leo.20170325211755.3"><vh>上課筆記</vh></v>
</v>
<v t="leo.20170328210949.1"><vh>上課練習</vh>
<v t="leo.20170328210949.2"><vh>上課練習</vh></v>
</v>
<v t="leo.20170328211120.1"><vh>步驟一</vh>
<v t="leo.20170328211120.2"><vh>步驟一</vh></v>
</v>
<v t="leo.20170328211217.1"><vh>步驟一圖片</vh>
<v t="leo.20170328211217.2"><vh>步驟一圖片</vh></v>
</v>
<v t="leo.20170328211355.1"><vh>步驟二</vh>
<v t="leo.20170328211355.2"><vh>步驟二</vh></v>
</v>
<v t="leo.20170328211445.1"><vh>步驟二圖片</vh>
<v t="leo.20170328211445.2"><vh>步驟二圖片</vh></v>
</v>
<v t="leo.20170328211935.1"><vh>練習二</vh>
<v t="leo.20170328211935.2"><vh>練習二</vh></v>
</v>
<v t="leo.20170328212059.1"><vh>步驟一圖片</vh>
<v t="leo.20170328212059.2"><vh>步驟一圖片</vh></v>
</v>
<v t="leo.20170328212138.1"><vh>步驟二圖片</vh>
<v t="leo.20170328212138.2"><vh>步驟二圖片</vh></v>
</v>
<v t="leo.20170328212313.1"><vh>步驟三圖片</vh>
<v t="leo.20170328212313.2"><vh>步驟三圖片</vh></v>
</v>
<v t="leo.20170328212409.1"><vh>步驟四圖片</vh>
<v t="leo.20170328212409.2"><vh>步驟四圖片</vh></v>
</v>
<v t="leo.20170328212520.1"><vh>步驟五圖片</vh>
<v t="leo.20170328212520.2"><vh>步驟五圖片</vh></v>
</v>
<v t="leo.20170328212710.1"><vh>步驟六圖片</vh>
<v t="leo.20170328212710.2"><vh>步驟六圖片</vh></v>
</v>
<v t="leo.20170328212804.1"><vh>步驟七圖片</vh>
<v t="leo.20170328212804.2"><vh>步驟七圖片</vh></v>
</v>
<v t="leo.20170328212931.1"><vh>心得</vh>
<v t="leo.20170328212931.2"><vh>心得</vh></v>
</v>
<v t="leo.20170328213013.1"><vh>練習影片</vh>
<v t="leo.20170328213013.2"><vh>練習影片</vh></v>
</v>
<v t="leo.20170328213249.1" a="E"><vh>回家練習</vh>
<v t="leo.20170328213249.2"><vh>回家練習</vh></v>
</v>
<v t="leo.20170328213352.1"><vh>步驟一圖片</vh>
<v t="leo.20170328213352.2"><vh>步驟一圖片</vh></v>
</v>
<v t="leo.20170328213356.1"><vh>步驟二圖片</vh>
<v t="leo.20170328213356.2"><vh>步驟二圖片</vh></v>
</v>
<v t="leo.20170328213400.1"><vh>步驟三圖片</vh>
<v t="leo.20170328213400.2"><vh>步驟三圖片</vh></v>
</v>
<v t="leo.20170328213624.1"><vh>步驟四圖片</vh>
<v t="leo.20170328213624.2"><vh>步驟四圖片</vh></v>
</v>
<v t="leo.20170328213345.1"><vh>回家心得</vh>
<v t="leo.20170328213345.2"><vh>回家心得</vh></v>
</v>
<v t="leo.20170328213338.1"><vh>回家練習影片</vh>
<v t="leo.20170328213338.2"><vh>回家練習影片</vh></v>
</v>
</v>
<v t="leo.20170410195046.1"><vh>20170329第六週上課筆記</vh>
<v t="leo.20170410195046.2"><vh>上課內容</vh>
<v t="leo.20170410195046.3"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170411203137.1"><vh>練習1</vh>
<v t="leo.20170411203137.2"><vh>練習</vh></v>
</v>
<v t="leo.20170411203156.1"><vh>練習2</vh>
<v t="leo.20170411203156.2"><vh>練習</vh></v>
</v>
<v t="leo.20170411203157.1"><vh>練習3</vh>
<v t="leo.20170411203157.2"><vh>練習</vh></v>
</v>
<v t="leo.20170411203159.1"><vh>練習4</vh>
<v t="leo.20170411203159.2"><vh>練習</vh></v>
</v>
<v t="leo.20170411203400.1"><vh>零件連結</vh>
<v t="leo.20170411203400.2"><vh>零件連結</vh></v>
</v>
<v t="leo.20170411203438.1"><vh>練習5</vh>
<v t="leo.20170411203438.2"><vh>練習</vh></v>
</v>
<v t="leo.20170411203440.1"><vh>練習6</vh>
<v t="leo.20170411203440.2"><vh>練習</vh></v>
</v>
<v t="leo.20170411203442.1"><vh>練習7</vh>
<v t="leo.20170411203442.2"><vh>練習</vh></v>
</v>
<v t="leo.20170411203609.1"><vh>心得</vh>
<v t="leo.20170411203609.2"><vh>心得</vh></v>
</v>
<v t="leo.20170411203624.1"><vh>影片</vh>
<v t="leo.20170411203624.2"><vh>影片</vh></v>
</v>
</v>
<v t="leo.20170410195103.1"><vh>20170405第七週上課筆記</vh>
<v t="leo.20170410195103.2"><vh>上課內容</vh>
<v t="leo.20170410195103.3"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170411214326.1"><vh>練習1-1</vh>
<v t="leo.20170411214326.2"><vh>練習</vh></v>
</v>
<v t="leo.20170411214328.1"><vh>練習1-2</vh>
<v t="leo.20170411214328.2"><vh>練習</vh></v>
</v>
<v t="leo.20170411214414.1"><vh>練習1-3</vh>
<v t="leo.20170411214414.2"><vh>練習</vh></v>
</v>
<v t="leo.20170411214416.1"><vh>練習2-1</vh>
<v t="leo.20170411214416.2"><vh>練習</vh></v>
</v>
<v t="leo.20170411214707.1"><vh>練習2-2</vh>
<v t="leo.20170411214707.2"><vh>練習</vh></v>
</v>
<v t="leo.20170411214709.1"><vh>練習2-3</vh>
<v t="leo.20170411214709.2"><vh>練習</vh></v>
</v>
<v t="leo.20170411214833.1"><vh>練習3-1</vh>
<v t="leo.20170411214833.2"><vh>練習</vh></v>
</v>
<v t="leo.20170411214858.1"><vh>練習3-2</vh>
<v t="leo.20170411214858.2"><vh>練習</vh></v>
</v>
<v t="leo.20170411215419.1"><vh>心得</vh>
<v t="leo.20170411215419.2"><vh>心得</vh></v>
</v>
<v t="leo.20170411215249.1"><vh>影片1</vh>
<v t="leo.20170411215249.2"><vh>影片</vh></v>
</v>
<v t="leo.20170411215250.1"><vh>影片2</vh>
<v t="leo.20170411215250.2"><vh>影片</vh></v>
</v>
<v t="leo.20170411215251.1"><vh>影片3</vh>
<v t="leo.20170411215251.2"><vh>影片</vh></v>
</v>
</v>
<v t="leo.20170506181907.1"><vh>20170405第八週上課筆記</vh>
<v t="leo.20170506181907.2"><vh>上課內容</vh>
<v t="leo.20170506181907.3"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170506181907.4"><vh>練習1-1</vh>
<v t="leo.20170506181907.5"><vh>練習</vh></v>
</v>
<v t="leo.20170506181907.10"><vh>練習2-1</vh>
<v t="leo.20170506181907.11"><vh>練習</vh></v>
</v>
<v t="leo.20170506181907.16"><vh>練習3-1</vh>
<v t="leo.20170506181907.17"><vh>練習</vh></v>
</v>
</v>
<v t="leo.20170506182504.1"><vh>20170405第九週上課筆記</vh>
<v t="leo.20170506182504.2"><vh>上課內容</vh>
<v t="leo.20170506182504.3"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170506182526.1"><vh>上課內容</vh>
<v t="leo.20170506182526.2"><vh>上課大綱</vh></v>
</v>
</v>
<v t="leo.20170506182727.1"><vh>20170405第十週上課筆記</vh>
<v t="leo.20170506182727.2"><vh>上課內容</vh>
<v t="leo.20170506182727.3"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170506182955.1"><vh>練習1-1</vh>
<v t="leo.20170506182955.2"><vh>練習</vh></v>
</v>
<v t="leo.20170506183107.1"><vh>圖片1-1</vh>
<v t="leo.20170506183107.2"><vh>練習</vh></v>
</v>
<v t="leo.20170506183215.1"><vh>練習2-1</vh>
<v t="leo.20170506183215.2"><vh>練習</vh></v>
</v>
<v t="leo.20170506183209.1"><vh>圖片2-1</vh>
<v t="leo.20170506183209.2"><vh>練習</vh></v>
</v>
<v t="leo.20170506183317.1"><vh>練習3-1</vh>
<v t="leo.20170506183317.2"><vh>練習</vh></v>
</v>
<v t="leo.20170506183320.1"><vh>圖片3-1</vh>
<v t="leo.20170506183320.2"><vh>練習</vh></v>
</v>
<v t="leo.20170506183412.1"><vh>影片</vh>
<v t="leo.20170506183412.2"><vh>練習</vh></v>
</v>
</v>
<v t="leo.20170610095926.1"><vh>20170405第十一週上課筆記</vh>
<v t="leo.20170610095926.2"><vh>上課內容</vh>
<v t="leo.20170610095926.3"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610100054.1"><vh>brython正齒輪</vh>
<v t="leo.20170610100054.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610101128.1"><vh>正齒輪 注意事項</vh>
<v t="leo.20170610101128.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610100515.1"><vh>cango正齒輪</vh>
<v t="leo.20170610100515.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610100539.1"><vh>brython齒輪組</vh>
<v t="leo.20170610100539.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610101945.1"><vh>齒輪組 注意事項</vh>
<v t="leo.20170610101945.2"><vh>上課大綱</vh></v>
</v>
</v>
<v t="leo.20170610102332.1"><vh>20170405第十二週上課筆記</vh>
<v t="leo.20170610102332.2"><vh>上課內容</vh>
<v t="leo.20170610102332.3"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610102611.1"><vh>上課內容</vh>
<v t="leo.20170610102611.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610102727.1"><vh>上課內容</vh>
<v t="leo.20170610102727.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610102904.1"><vh>影片</vh>
<v t="leo.20170610102904.2"><vh>練習</vh></v>
</v>
<v t="leo.20170610102906.1" a="E"><vh>影片-2</vh>
<v t="leo.20170610102906.2"><vh>練習</vh></v>
</v>
</v>
<v t="leo.20170610103339.1"><vh>20170405第十三週上課筆記</vh>
<v t="leo.20170610103339.2"><vh>上課內容</vh>
<v t="leo.20170610103339.3"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610103339.4"><vh>上課內容</vh>
<v t="leo.20170610103339.5"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610103339.6"><vh>上課內容</vh>
<v t="leo.20170610103339.7"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610103509.1"><vh>上課內容</vh>
<v t="leo.20170610103509.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610103535.1"><vh>上課內容</vh>
<v t="leo.20170610103535.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610103600.1"><vh>上課內容</vh>
<v t="leo.20170610103600.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610103617.1"><vh>上課內容</vh>
<v t="leo.20170610103617.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610103339.8"><vh>影片</vh>
<v t="leo.20170610103339.9"><vh>練習</vh></v>
</v>
<v t="leo.20170610103339.10"><vh>影片-2</vh>
<v t="leo.20170610103339.11"><vh>練習</vh></v>
</v>
<v t="leo.20170610103710.1"><vh>影片-3</vh>
<v t="leo.20170610103710.2"><vh>練習</vh></v>
</v>
</v>
<v t="leo.20170610104037.1"><vh>20170405第十四週上課筆記</vh>
<v t="leo.20170610104037.2"><vh>上課內容</vh>
<v t="leo.20170610104037.3"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104037.4"><vh>上課內容</vh>
<v t="leo.20170610104037.5"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104037.6"><vh>上課內容</vh>
<v t="leo.20170610104037.7"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104037.8"><vh>上課內容</vh>
<v t="leo.20170610104037.9"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104037.10"><vh>上課內容</vh>
<v t="leo.20170610104037.11"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104037.12"><vh>上課內容</vh>
<v t="leo.20170610104037.13"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104037.14"><vh>上課內容</vh>
<v t="leo.20170610104037.15"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104334.1"><vh>上課內容</vh>
<v t="leo.20170610104334.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104356.1"><vh>上課內容</vh>
<v t="leo.20170610104356.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104416.1"><vh>上課內容</vh>
<v t="leo.20170610104416.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104434.1"><vh>上課內容</vh>
<v t="leo.20170610104434.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104458.1"><vh>上課內容</vh>
<v t="leo.20170610104458.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104519.1"><vh>上課內容</vh>
<v t="leo.20170610104519.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104542.1"><vh>上課內容</vh>
<v t="leo.20170610104542.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104622.1"><vh>上課內容</vh>
<v t="leo.20170610104622.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104648.1"><vh>上課內容</vh>
<v t="leo.20170610104648.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104720.1"><vh>上課內容</vh>
<v t="leo.20170610104720.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610105006.1"><vh>上課內容</vh>
<v t="leo.20170610105006.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610105027.1"><vh>上課內容</vh>
<v t="leo.20170610105027.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610105050.1"><vh>上課內容</vh>
<v t="leo.20170610105050.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610105130.1"><vh>上課內容</vh>
<v t="leo.20170610105130.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610104037.16"><vh>影片</vh>
<v t="leo.20170610104037.17"><vh>練習</vh></v>
</v>
</v>
<v t="leo.20170610110041.1"><vh>20170405第十五週上課筆記</vh>
<v t="leo.20170610110041.2"><vh>上課內容</vh>
<v t="leo.20170610110041.3"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610110041.4"><vh>上課內容</vh>
<v t="leo.20170610110041.5"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610110041.6"><vh>上課內容</vh>
<v t="leo.20170610110041.7"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610110041.8"><vh>上課內容</vh>
<v t="leo.20170610110041.9"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610110041.10"><vh>上課內容</vh>
<v t="leo.20170610110041.11"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610110818.1"><vh>上課內容</vh>
<v t="leo.20170610110818.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610110820.1"><vh>上課內容</vh>
<v t="leo.20170610110820.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610111030.1"><vh>上課內容</vh>
<v t="leo.20170610111030.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610110041.44"><vh>影片</vh>
<v t="leo.20170610110041.45"><vh>練習</vh></v>
</v>
<v t="leo.20170610111128.1"><vh>影片-2</vh>
<v t="leo.20170610111128.2"><vh>練習</vh></v>
</v>
</v>
<v t="leo.20170610112950.1"><vh>20170405第十六週上課筆記</vh>
<v t="leo.20170610112950.2"><vh>上課內容</vh>
<v t="leo.20170610112950.3"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170610112950.4" a="E"><vh>上課內容</vh>
<v t="leo.20170610112950.5"><vh>上課大綱</vh></v>
</v>
</v>
<v t="leo.20170621083909.1"><vh>20170405第十七週上課筆記</vh>
<v t="leo.20170621083909.2"><vh>上課內容</vh>
<v t="leo.20170621083909.3"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170621084055.1"><vh>上課內容</vh>
<v t="leo.20170621084055.2"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170621094157.1"><vh>上課內容</vh>
<v t="leo.20170621094157.2"><vh>上課大綱</vh></v>
</v>
</v>
<v t="leo.20170621082850.1"><vh>20170405第十八週上課筆記</vh>
<v t="leo.20170621082850.2"><vh>上課內容</vh>
<v t="leo.20170621082850.3"><vh>上課大綱</vh></v>
</v>
<v t="leo.20170621083037.1"><vh>上課內容</vh>
<v t="leo.20170621083037.2"><vh>上課大綱</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="yen.20170108171733.71"><vh>@path content</vh>
<v t="yen.20170123225841.1"><vh>@edit 20170222.md</vh></v>
<v t="leo.20170304202845.1"><vh>@edit 20170301.md</vh></v>
<v t="leo.20170309204306.1"><vh>@edit 20170308.md</vh></v>
<v t="leo.20170325210841.1"><vh>@edit 20170315.md</vh></v>
<v t="leo.20170325211833.1"><vh>@edit 20170322.md</vh></v>
<v t="leo.20170410181227.1"><vh>@edit 20170329.md</vh></v>
<v t="leo.20170410194113.1"><vh>@edit 20170405.md</vh></v>
<v t="leo.20170426105625.1"><vh>@edit 20170412.md</vh></v>
<v t="leo.20170426203531.1"><vh>@edit 20170418.md</vh></v>
<v t="leo.20170426202737.1"><vh>@edit 20170419.md</vh></v>
<v t="leo.20170429163207.1"><vh>@edit 20170420.md</vh></v>
<v t="leo.20170506173751.1"><vh>@edit 20170426.md</vh></v>
<v t="leo.20170510180626.1"><vh>@edit 20170503.md</vh></v>
<v t="leo.20170517090735.1"><vh>@edit 20170510.md</vh></v>
<v t="leo.20170517093029.1"><vh>@edit 20170517.md</vh></v>
<v t="leo.20170528195632.1"><vh>@edit 20170524.md</vh></v>
<v t="leo.20170528211718.1"><vh>@edit 20170528.md</vh></v>
<v t="leo.20170531083924.1"><vh>@edit 20170531.md</vh></v>
<v t="leo.20170610112242.1"><vh>@edit 20170607.md</vh></v>
<v t="leo.20170614083738.1"><vh>@edit 20170614.md</vh></v>
<v t="leo.20170303212553.1"><vh>@@edit 20170108.md</vh></v>
<v t="yen.20170108171733.81"><vh>@path pages</vh>
<v t="yen.20170108171733.82"><vh>@edit pages_1.md</vh></v>
</v>
</v>
<v t="yen.20170108171733.83"><vh>產生 .key 與 .crt</vh></v>
</v>
<v t="yen.20170108171930.1"><vh>@button https server</vh></v>
<v t="yen.20170108171939.1"><vh>@button ipv6 https server</vh></v>
<v t="yen.20170120212350.1"><vh>programs</vh>
<v t="leo.20170510181722.1"><vh>W11</vh>
<v t="leo.20170510181722.2"><vh>spur</vh></v>
<v t="leo.20170510181722.3"><vh>Cango javascript</vh></v>
<v t="leo.20170510181722.4"><vh>fillet intersection</vh></v>
<v t="leo.20170510181722.5"><vh>Involute Javascript</vh></v>
<v t="leo.20170510181722.6"><vh>animation script</vh></v>
</v>
<v t="yen.20170210153828.1"><vh>v-rep rempte api</vh>
<v t="yen.20170210202015.1"><vh>Python remote API</vh></v>
<v t="yen.20170210170248.1"><vh>line tracer</vh></v>
<v t="yen.20170210222733.1"><vh>line tracer2</vh></v>
<v t="yen.20170210172100.1"><vh>three-link robot</vh></v>
<v t="yen.20170210221519.1"><vh>bubble</vh></v>
</v>
<v t="yen.20170120212354.1"><vh>calendar ex1</vh></v>
<v t="yen.20170120212520.1"><vh>calendar ex2</vh></v>
<v t="yen.20170120232548.1"><vh>calendar example</vh></v>
<v t="yen.20170123204227.1"><vh>印出月曆以及各課程上課日期</vh></v>
<v t="yen.20170207092354.1"><vh>協同程式參考</vh></v>
<v t="yen.20170124102405.1"><vh>chat</vh>
<v t="yen.20170124102433.1"><vh>index.html</vh></v>
</v>
</v>
<v t="yen.20170209024032.1"><vh>reference</vh></v>
<v t="leo.20170621095346.2" a="E"><vh>Recovered Nodes</vh>
<v t="leo.20170621095346.3"><vh>Recovered node "圖片" from @clean index.html</vh>
<v t="leo.20170621095346.4"><vh>old:圖片</vh></v>
<v t="leo.20170621095346.5"><vh>new:圖片</vh></v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="leo.20170303212553.1">@language md
Title: 2017Spring 協同產品設計實習
Date: 2017-01-08 11:00
Category: Course
Tags: syllabus, w1
Slug: 2017spring-cd
Author: yen

協同產品設計實習在銜接計算機程式、電腦輔助設計實習課程, 讓學員以分組協同的方式進行產品設計實習.

&lt;!-- PELICAN_END_SUMMARY --&gt;

##歷年協同產品設計實習課程

&lt;a href="https://chiamingyen.github.io/kmolab/blog/tag/xie-tong-chan-pin-she-ji-shi-xi.html"&gt;2016 Spring 協同產品設計實習&lt;/a&gt;

&lt;a href="http://cd-cadp.rhcloud.com"&gt;2015 Spring 協同產品設計實習&lt;/a&gt;

&lt;a href="http://wiki.mde.tw/doku.php?id=%E5%8D%94%E5%90%8C%E7%94%A2%E5%93%81%E8%A8%AD%E8%A8%88:%E5%AF%A6%E7%BF%92%E7%9B%AE%E6%A8%99"&gt;2014 Spring 協同產品設計實習&lt;/a&gt;

##協同產品設計實習課程規劃

分組規劃: 每班自選組員, 分為 8 組, 每四組分配一台 8GB Ram/500GB HD 電腦作為廣域網路伺服器. 各組成員必須利用自建網站與 &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt; 進行協同歷程簡報、網誌與操作流程影片 (分別放在 Youtube 與 &lt;a href="https://vimeo.com/"&gt;Vimeo&lt;/a&gt;, 並冠上學員學號、系所名稱與課程名稱) 展示.

協同實習專案: 

(一) &lt;a href="http://solvespace.com/linkage.pl"&gt;多連桿機構&lt;/a&gt;由 &lt;a href="http://solvespace.com"&gt;Solvespace&lt;/a&gt; 與 &lt;a href="https://www.onshape.com/"&gt;Onshape&lt;/a&gt; 完成組立後, 

(二) 以程式套件取得特定點的迴轉軌跡後, 

(三) 利用各組自行編寫的 Python3 + C 程式進行軌跡點座標進行驗證. 

(四) 之後將各連桿機構 (包括單桿、四連桿與多連桿單一自由度系統) 轉入 &lt;a href="http://www.coppeliarobotics.com/"&gt;V-rep&lt;/a&gt; 進行驅動模擬後, 

(五) 轉由 remote API 模式, 以區域網路或廣域網路之 Python3 程式進行 &lt;a href="http://www.coppeliarobotics.com/"&gt;V-rep&lt;/a&gt; 連桿機構之驅動模擬控制. 確定可以利用各連桿尺寸調控目標端點的迴轉路徑後, 

(六) 接著在 &lt;a href="https://www.onshape.com/"&gt;Onshape&lt;/a&gt; 中, 以協同模式完成多連桿機構的細部組立設計後, 

(七) 再根據多連桿機構的設計材料表, 進行備料, 此階段並導入 Arduino 直流馬達控制系統, 並以 Delta 3D Printer 印出多連桿系統的實體零件後, 進行多連桿機構系統的實體組立與運動控制.

(八) 最後, 每四組各自利用所完成的&lt;a href="http://solvespace.com/linkage.pl"&gt;多連桿機構&lt;/a&gt;, 組成一四足行走機構, 在 &lt;a href="http://www.coppeliarobotics.com/"&gt;V-rep&lt;/a&gt; 中完成運動模擬後, 每班所完成的兩具行走機構, 分別在 &lt;a href="http://www.coppeliarobotics.com/"&gt;V-rep&lt;/a&gt; 虛擬環境與實體環境中進行運動模擬與行走測試.

##協同產品設計實習評分標準:

(一) 各參與協同學員是否按步就班利用網際簡報、網誌與操作影片呈現細節內容 (50%) - 各組學員根據實際完成內容自評成績後 * 老師認可百分比

(二) 各組學員在產品設計實習過程是否互助砥礪完成既定工作任務 (分組成員互評) (20%) - 各組學員根據實際內容舉證互評成績平均, 參考系統: &lt;a href="https://pygroup-ag100.rhcloud.com"&gt;https://pygroup-ag100.rhcloud.com&lt;/a&gt;

(三) 上課出席與表現 (各學員根據實際內容舉證自評成績 * 老師認可百分比) (30%)

##協同產品設計實習各週上課日期

2017 Spring  08:10-12:00 各週上課日期:

&lt;span style="background-color: #ffff00"&gt;w1&lt;/span&gt;-2/22 2b (三) &amp; 2/23 2a (四) - 請每人準備一個隨身碟, &lt;span style="background-color: #55ff55"&gt;&lt;a href="http://service.mde.tw/public/tiny2017_1GB.7z"&gt;下載&lt;/a&gt;&lt;/span&gt;可攜程式系統 (1GB). 接著請&lt;span style="background-color: #55ff55"&gt;&lt;a href="http://service.mde.tw/public/Onshape_help.pdf"&gt;下載&lt;/a&gt;&lt;/span&gt; Onshape_help.pdf (17.2 MB), 了解如何利用 &lt;a href="http://solvespace.com"&gt;Solvespace&lt;/a&gt; 與 &lt;a href="https://www.onshape.com/"&gt;Onshape&lt;/a&gt; 組立單軸旋轉連桿系統、四連桿系統與&lt;a href="http://solvespace.com/linkage.pl"&gt;多連桿系統&lt;/a&gt;. &lt;button onClick="lity('https://player.vimeo.com/video/205152670')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; W1影片&lt;/button&gt;

&lt;span style="background-color: #ffff00"&gt;w2&lt;/span&gt;-3/1 2b (三) &amp; 3/2 2a (四) - 每班分為八組, 每四組分配一台 8GB Ram/500GB HD 電腦作為 IPv4/IPv6 伺服器, 了解如何利用 IPv4 與 IPv6 網路連線傳輸設計檔案. 各組 CMSimfly 區域網站的應用. 各組以協同模式完成&lt;a href="http://solvespace.com"&gt;Solvespace&lt;/a&gt; 與 &lt;a href="https://www.onshape.com/"&gt;Onshape&lt;/a&gt; 單軸旋轉連桿系統與四連桿系統. &lt;button onClick="lity('https://player.vimeo.com/video/206173941')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 建立分組程式&lt;/button&gt; &lt;button onClick="lity('https://player.vimeo.com/video/206332375')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 啟動 Stunnel&lt;/button&gt; &lt;button onClick="lity('https://player.vimeo.com/video/206175405')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 四連桿組立&lt;/button&gt; &lt;button onClick="lity('https://player.vimeo.com/video/206342459')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 四連桿組立(2a)&lt;/button&gt; &lt;button onClick="location.href='http://service.mde.tw/public/fourbarlinkage_w_pin_base.7z'"&gt;&lt;span class="glyphicon glyphicon-file"&gt;&lt;/span&gt; 四連桿組立檔&lt;/button&gt;

&lt;span style="background-color: #ffff00"&gt;w3&lt;/span&gt;-3/8 2b (三) &amp; 3/9 2a (四) - 各組以協同模式完成 &lt;a href="http://solvespace.com"&gt;Solvespace&lt;/a&gt; 與 &lt;a href="https://www.onshape.com/"&gt;Onshape&lt;/a&gt; 之 &lt;a href="http://solvespace.com/linkage.pl"&gt;多連桿系統&lt;/a&gt;組立. 各組完成廣域網路與 &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt; 網頁與簡報呈現各組學員與分組協同工作流程細節.

&lt;span style="background-color: #ffff00"&gt;w4&lt;/span&gt;-3/15 2b (三) &amp; 3/14 2a (四) - 單連桿與四連桿機構轉入 V-rep 進行運動模擬 &lt;button onClick="lity('https://player.vimeo.com/video/203463280')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 單連桿&lt;/button&gt;

&lt;span style="background-color: #ffff00"&gt;w5&lt;/span&gt;-3/22 2b (三) &amp; 3/23 2a (四) - 單連桿與四連桿機構轉入 V-rep 進行運動模擬

&lt;span style="background-color: #ffff00"&gt;w6&lt;/span&gt;-3/29 2b (三) &amp; 3/30 2a (四) - 多連桿機構轉入 V-rep 進行運動模擬 &lt;button onClick="lity('https://player.vimeo.com/video/203155380')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 多連桿&lt;/button&gt;

&lt;span style="background-color: #ffff00"&gt;w7&lt;/span&gt;-4/5 2b (三) &amp; 4/6 2a (四) - 多連桿機構轉入 V-rep 進行運動模擬

&lt;span style="background-color: #ffff00"&gt;w8&lt;/span&gt;-4/12 2b (三) &amp; 4/13 2a (四) - 各組期中簡報 (含影片拍攝與上傳) 與評分

&lt;span style="background-color: #ffff00"&gt;w9&lt;/span&gt;-4/19 2b (三) &amp; 4/20 2a (四) - V-rep remote API 運動控制

&lt;span style="background-color: #ffff00"&gt;w10&lt;/span&gt;-4/26 2b (三) &amp; 4/27 2a (四) - V-rep remote API 運動控制

&lt;span style="background-color: #ffff00"&gt;w11&lt;/span&gt;-5/3 2b (三) &amp; 5/4 2a (四) - Arduino 直流馬達控制

&lt;span style="background-color: #ffff00"&gt;w12&lt;/span&gt;-5/10 2b (三) &amp; 5/11 2a (四) - Arduino 直流馬達控制

&lt;span style="background-color: #ffff00"&gt;w13&lt;/span&gt;-5/17 2b (三) &amp; 5/18 2a (四) - Onshape 行走機構細部設計 (含齒輪傳動)

&lt;span style="background-color: #ffff00"&gt;w14&lt;/span&gt;-5/24 2b (三) &amp; 5/25 2a (四) - Onshape 行走機構細部設計 (含齒輪傳動)

&lt;span style="background-color: #ffff00"&gt;w15&lt;/span&gt;-5/31 2b (三) &amp; 6/1 2a (四) - V-rep 行走機構模擬與零件列印組立測試

&lt;span style="background-color: #ffff00"&gt;w16&lt;/span&gt;-6/7 2b (三) &amp; 6/8 2a (四) - V-rep 行走機構模擬與零件列印組立測試

&lt;span style="background-color: #ffff00"&gt;w17&lt;/span&gt;-6/14 2b (三) &amp; 6/15 2a (四) - V-rep 行走機構模擬與零件列印組立測試

&lt;span style="background-color: #ffff00"&gt;w18&lt;/span&gt;-6/21 2b (三) &amp; 6/22 2a (四) - 各組期末簡報  (含影片拍攝與上傳) 與評分


##參考資料:

&lt;img src="./../data/jansen_solvespace_1.png" width="560" /&gt;

&lt;img src="./../data/jansen_solvespace_2.png" width="560" /&gt;

&lt;img src="./../data/jansen_solvespace_3.png" width="560" /&gt;

&lt;img src="./../data/eight_bar_solvespace_vrep_1.png" width="560" /&gt;

&lt;iframe src="https://player.vimeo.com/video/203155380" width="560" height="315" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/203155380"&gt;機械設計工程系-協同產品設計實習課程: cd v-rep 8bar simulation&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/kKSDgIhc8GI" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/4Pj-WLAVL7M" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;a href="https://github.com/spacether/pycalculix"&gt;https://github.com/spacether/pycalculix&lt;/a&gt;
</t>
<t tx="leo.20170303213004.1">&lt;!-- Any section element inside of this container is displayed as a slide --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;

</t>
<t tx="leo.20170303213004.10">##一.可至2017 Spring 協同產品設計實習觀看這學期的課程大綱，老師介紹了Blender 3dstudio maya的相關性，簡略說明c語言與python的優劣與使用時機。
</t>
<t tx="leo.20170303213004.11">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170303213004.12">###二.了解如何使用stunnel，並且嘗試以anonymous（無名氏/遊客）的身份進入https://192.168.1.24/2017springvcp_hw/index。

####在按下start之後，會出現錯誤的圖案

</t>
<t tx="leo.20170303213004.13">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170303213004.14">&lt;/span&gt;&lt;img src="data/image W1/stunnel Error.png" width="640" /&gt;

</t>
<t tx="leo.20170303213004.15">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170303213004.16">###這是因為stunnel資料夾裡的config/styunnel.conf裡的ip與電腦的ip不同(styunnel.conf裡的分號代表註解)，可至cmd打ipconfig/all的指令，找到電腦的ip位置並將其複製、貼到styunnel.conf裡，(443為https的Port號不須修改)

</t>
<t tx="leo.20170303213004.17">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170303213004.18">&lt;/span&gt;&lt;img src="data/image W1/stunnel ip位置.png" width="640" /&gt;

</t>
<t tx="leo.20170303213004.19">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170303213004.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170303213004.20">###如果有設置proxy就必須要到設定proxy的地方按進階，將電腦ip設為額外ip，這樣就可至google打網址，並且嘗試以anonymous（無名氏/遊客）的身份進入https://192.168.1.24/2017springvcp_hw/index。

</t>
<t tx="leo.20170303213004.21">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170303213004.22">###&lt;img src="data/image W1/2017springvcp_hw-index.png" width="640" /&gt;
</t>
<t tx="leo.20170303213004.23">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170303213004.24">###三.利用python程式碼控制Vrep裡的單連桿作動。

####可至課程倉儲的data裡下載fourbar_eightbar_solvespace_vrep.7z以及onelink_vrep_remoteapi_pos_vel.7z兩個檔案，解壓縮後會有三個檔案，分別是單連桿、四連桿及八連桿，可試著在solvespace及Vrep裡開啟。

</t>
<t tx="leo.20170303213004.25">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170303213004.26">&lt;img src="data/jansen_solvespace_2.png" width="640" /&gt;

</t>
<t tx="leo.20170303213004.27">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170303213004.28">&lt;img src="data/image W1/fourbar345.png" width="640" /&gt;

</t>
<t tx="leo.20170303213004.29">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170303213004.3">## 2017Spring 協同產品設計實習

### 虎科大機械設計工程系

####學員 40423245 課程投影片

&lt;small&gt;
Created by [40423245](https://40423245.github.io/2017springcd_hw/blog/)
&lt;/small&gt;

[協同產品設計實習課程個人網誌](blog/index.html)

[Vimeo 上課心得影片](https://vimeo.com/user47996237)


</t>
<t tx="leo.20170303213004.30">###在Vrep裡開啟one_link_robot_remoteAPI.ttt的檔案(ttt是Vrep檔案的副檔名)，在SciTE裡開啟one_link_robot_remoteAPI_joint_target_vel.py的檔案，按下Tool裡的Go即可開始控制單連桿，按Enter會旋轉，按P會暫停。
</t>
<t tx="leo.20170303213004.31">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170303213004.32">&lt;img src="data/image W1/one_link_robot_remoteAPI.png" width="640" /&gt;
</t>
<t tx="leo.20170303213004.33">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170303213004.34">##第一週心得影片

&lt;iframe src="https://player.vimeo.com/video/205656178" width="640" height="425" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/205656178"&gt;40423245機械設計工程系-協同產品設計實習課程-W1&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

</t>
<t tx="leo.20170303213004.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170303213004.5"># 投影片快捷鍵

* 利用箭頭上下前後換頁
* 按 f 鍵進入全螢幕模式 (full screen)
* 按 s 鍵可以顯示投影片筆記 (show)
* 按 o 鍵可以切換單張或全域檢視 (overview)
* 按 b 或 . 鍵可以切換螢幕黑屏 (black)
* 按 Esc 可以退出全螢幕或全域檢視 (Escape)

</t>
<t tx="leo.20170303213004.6">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170303213004.7">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170303213004.8">#第一週上課筆記

##一.這學期的課程大綱

##二.了解如何使用stunnel

##三.利用python程式碼控制Vrep裡的單連桿作動。
</t>
<t tx="leo.20170303213004.9">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170304202812.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170304202812.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170304202812.11">##再將桿子組立起來(利用點與點的重合、線的共線及點與面的重合，限制桿子的作動。)

</t>
<t tx="leo.20170304202812.12">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170304202812.13">&lt;img src="data/image W2/fourbar combination.png" width="640" /&gt;

</t>
<t tx="leo.20170304202812.14">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170304202812.15">##最後將四連桿儲存成stl檔`並用Vrep裡的import裡的Mash開啟(開啟時四連桿會重疊到地面，可用object/item shift調整Z軸高度)

</t>
<t tx="leo.20170304202812.16">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170304202812.17">&lt;img src="data/image W2/Vrep fourbar combination.png" width="640" /&gt;
</t>
<t tx="leo.20170304202812.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170304202812.28">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170304202812.29">##第二週心得影片

&lt;iframe src="https://player.vimeo.com/video/206845385" width="640" height="457" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/206845385"&gt;40423245機械設計工程系 - 協同產品設計實習課程-W2&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</t>
<t tx="leo.20170304202812.3">#第二週上課筆記

##一.利用python找出缺課人員

##二.在solvespace組立四連桿，並放置到Vrep裡。
</t>
<t tx="leo.20170304202812.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170304202812.5">##一.利用python找出缺課人員
</t>
<t tx="leo.20170304202812.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170304202812.7">##二.在solvespace組立四連桿，並放置到Vrep裡。

</t>
<t tx="leo.20170304202812.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170304202812.9">&lt;img src="data/image W2/fourbar Architecture.png" width="640" /&gt;

</t>
<t tx="leo.20170304213241.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170304213241.2">###第一週心得  : 在經過上學期得學習，發現這學期的課程變得有點難，在每個禮拜最後一堂課還要上台分享，期望能迅速地進入狀況。
</t>
<t tx="leo.20170305173211.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170305173211.2">## 分組座位程式碼
以下利用 Python格式列印出班級座位表
```
@language python
#import os
#讀取w2b_cadlab.txt的檔案將其儲存為adata，並設定encoding為utf-8
adata = open("w2b_cadlab.txt", encoding="utf-8").read()
#讀取w2b_registered.txt的檔案將其儲存為rdata，並一行一行隔開，並設定encoding為utf-8
rdata = open("w2b_registered.txt", encoding="utf-8").read().splitlines()
#print(adata)
#利用splitlines將adata一行一行隔開並其儲存為alist
alist = adata.splitlines()
#print(alist[2])
#將變數n儲存為0
n = 0
#將列從0開始算起
row = 0
#將final_list儲存為一個空的數列
final_list = []
#將w2_list儲存為一個空的數列
w2_list = []
#執行一個for迴圈從第二列開始
for stud_num in alist[2:]:
    #每執行完一次迴圈列數+1
    row = row + 1
    #執行完迴圈後用\將其隔開並儲存為blist
    blist = stud_num.split("\t")
    #print(blist)
    #將行從0開始算起
    column = 0
    #執行一個for迴圈去取得blist裡的數列
    for i in range(len(blist)):
         #每執行完一次迴圈行數+1
        column = column + 1
        #假如blist數列裡不是空白
        if blist[i] != "":
            #print(blist[i])
            #將組序有用_隔開的儲存為clist 
            clist = blist[i].split("_")
            #將組序+_+學號+_+列+行的資料儲存為stud_data
            stud_data = clist[0]+"_"+clist[1]+"_"+str(row)+"_"+str(column)
             #將stud_data結果附加在final_list的資料裡
            final_list.append(stud_data)
            #將clist[1]結果附加在w2_list的資料裡
            w2_list.append(clist[1])
            #每執行完一次迴圈n+1
            n = n +1
# 根據數列前導字串排序, 目的在建立分組數列
group_list = sorted(final_list)
#列印出分組名單
print("分組名單:")
#執行一個for迴圈去取得group_list裡的數列
for i in range(len(group_list)):
    #列印出 group_list[i]的資料
    print(group_list[i])
#列印出座位列表
print("座位列表:")
#執行一個for迴圈去取得final_list裡的數列
for i in range(len(final_list)):
    #列印出 final_list[i]的資料
    print(final_list[i])
#執行一個for迴圈去取得rdata裡的數列
for i in range(len(rdata)):
    #假如有在rdata裡但沒有在w2_list裡，目的在找出缺席學生
    if rdata[i] not in w2_list:
        #列印出 rdata[i]的資料，缺席學生
        print("缺席學生:", rdata[i])
#列印出學生總數n個
print("學生總數:", n)
#print(os.environ)

```
</t>
<t tx="leo.20170305173446.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170305173446.2">##可至班級倉儲data下載W2資料夾裡的cd_w2.py(有填寫座位表的人)和w2b_registered.txt(有修課的人)，接著利用利用程式碼列印出分組名單、座位列表、缺席學生和學生總數
</t>
<t tx="leo.20170305173806.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170305173806.2">##先在solvespace裡繪製出四連桿結構

</t>
<t tx="leo.20170305174109.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170305174109.2">##第二週心得  
  這禮拜理解到了程式碼的方便之處，體驗到了利用程式碼去處理繁雜的資料，r接著開始了解如何使用Vrep，以利之後要設計的八隻腳。


</t>
<t tx="leo.20170312205719.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170312205719.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170312205719.24">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170312205719.25">##心得
這學期的倉儲的wiki要在不同的地方編輯，還需要時間來適應，還有在做任務一時，明顯的發現到自己英文能力的不足，希望能盡快的補足這方面的能力


</t>
<t tx="leo.20170312205719.26">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170312205719.27">##任務二影片
&lt;iframe src="https://player.vimeo.com/video/207629426" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/207629426"&gt;40423245機械設計工程系 - 協同產品設計實習課程-W3任務二完成 Solvespace 30-50-60 cm 比例的四連桿組立&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

</t>
<t tx="leo.20170312205719.3">#第三週上課筆記

##一.了解hyperworks

##二.更改start的fossil路徑
</t>
<t tx="leo.20170312210047.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170312210047.2">##任務三影片
&lt;iframe src="https://player.vimeo.com/video/207626453" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/207626453"&gt;40423245機械設計工程系 - 協同產品設計實習課程-W3任務三利用 Onshape 完成四連桿機構, 以 stl 轉出後, 再轉入 V-rep&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;


</t>
<t tx="leo.20170312210107.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170312210107.2">##任務四、五影片
&lt;iframe src="https://player.vimeo.com/video/207920094" width="640" height="454" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/207920094"&gt;40423245機械設計工程系 - 協同產品設計實習課程-W3任務四、任務五&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;


</t>
<t tx="leo.20170312210710.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170312210710.2">##從 https://mde2al.kmol.info 進入wiki檢視每周進度，並介紹了hyperworks這套軟體，包括檢測受力.受熱.流力.最小化資源利用‧‧‧，還給我們十則影片翻譯，以便了解hyperworks以及增進英文能力。


</t>
<t tx="leo.20170312210721.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170312210721.2">##更改start的fossil路徑，讓程式自行尋找電腦ip，並由組長建立組別的https，讓組員在wiki上分配工作以及上傳作業。


</t>
<t tx="leo.20170312210814.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170312210814.2">##第三週任務


</t>
<t tx="leo.20170312210842.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170312210842.2">##1. 請至課程網頁中 w3 Hyperworks 處瀏覽 10 個影片, 請每組選兩個影片, 設法寫出該影片的英文逐字稿, 目的是希望能夠最佳化行走機構的零件


</t>
<t tx="leo.20170312210848.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170312210848.2">##2.請完成 Solvespace 30-50-60 cm 比例的四連桿組立, 並轉出 stl 檔案, 以 import 方式轉入 V-rep


</t>
<t tx="leo.20170312210854.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170312210854.2">##3. 請利用 Onshape 完成上述相同尺寸之四連桿機構, 以 stl 轉出 (或其他格式) 後, 再轉入 V-rep


</t>
<t tx="leo.20170312210903.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170312210903.2">##4.請在 50 連桿上加上 50-50-50 正三角形, 以 Solvespace 輸入該三角形頂點運動軌跡


</t>
<t tx="leo.20170312210910.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170312210910.2">##5.請設法驗證上述四連桿運動軌跡, 是否正確, 並設法在分組網頁中執行該四連桿機構的運動模擬

</t>
<t tx="leo.20170312211023.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170312211023.2">####先在solvespace裡繪製出四連桿結構

&lt;img src="data/image W2/fourbar Architecture.png" width="560" /&gt;

</t>
<t tx="leo.20170312211133.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170312211133.2">####再將桿子組立起來(利用點與點的重合、線的共線及點與面的重合，限制桿子的作動。)

&lt;img src="data/image W2/fourbar combination.png" width="560" /&gt;

</t>
<t tx="leo.20170312211220.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170312211220.2">####最後將四連桿儲存成stl檔`並用Vrep裡的import裡的Mash開啟(開啟時四連桿會重疊到地面，可用object/item shift調整Z軸高度)

&lt;img src="data/image W2/Vrep fourbar combination.png" width="560" /&gt;

</t>
<t tx="leo.20170312211322.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170312211322.2">####先在Onshape中繪製出四連桿

&lt;img src="data/image W3/fourbar in onshape.png" width="560" /&gt;

</t>
<t tx="leo.20170312211354.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170312211354.2">####&lt;a href="https://cad.onshape.com/documents/8a40a446a6e3a930313e8ca4/w/b9aa548914cf88a0a506e817/e/6f45645181ba9446e1398078"&gt;Onshape四連桿機構&lt;/a&gt;

</t>
<t tx="leo.20170312211457.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170312211457.2">####接著將四連桿匯出，分別有PARASOLID，ACIS
，STEP，IGES，COLLADA，STL的檔案格式

&lt;img src="data/image W3/onshape format.png" width="560" /&gt;

</t>
<t tx="leo.20170312211643.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170312211643.2">####接著在Vrep裡用import裡的Mesh將檔案匯入，發現只能匯入stl檔案

&lt;img src="data/image W3/Vrep stl.png"width="560" /&gt;

</t>
<t tx="leo.20170312211645.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170312211645.2">####&lt;img src="data/image W3/Vrep fourbar.png"width="640" /&gt;

</t>
<t tx="leo.20170312211830.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170312211830.2">####先利用solvespace在 50 連桿上加上 50-50-50 正三角形，並利用Analyze裡的Trace point繪製出頂點的運動軌跡。

&lt;img src="data/image W3/fourbar trace point.png" width="560" /&gt;

</t>
<t tx="leo.20170312212027.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170312212027.2">####接著可利用Stop point 將路徑匯出成csv檔，接著可利用Excel裡的圖表繪製功能驗證軌跡是否相同。

&lt;img src="data/image W3/Excel trace point.png" width="560" /&gt;

</t>
<t tx="leo.20170312212106.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170312212106.2">##最後利用課程網誌裡&lt;a href="http://mde.tw/2017springcd/blog/brython-2d-drawing.html"&gt;協同產品設計實習第1週任務&lt;/a&gt;的程式碼去驗證solvespace裡所繪製的運動軌跡。

</t>
<t tx="leo.20170312212209.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170312212209.2">####&lt;img src="data/image W3/python trace point.png" width="640" /&gt;

</t>
<t tx="leo.20170312212235.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170312212235.2">##結果 :

cx= -65.20944533000791 cy= 29.544232590366242

dx= -22.53868820588739 dy= 55.60582284219696

ex= -66.44406598905394 ey= 79.52898738448577

</t>
<t tx="leo.20170325211224.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170325211224.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170325211224.3">#第四週上課筆記

##1.Fossil新增組員以及組員權限設定

##2.在Onshape繪製單連桿機構並轉出stl檔案

##3.在solvespace繪製單連桿機構並轉出stl檔案
</t>
<t tx="leo.20170325211755.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170325211755.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170325211755.3">#第五週上課筆記

##1.如何在fossil筆記倉儲主頁顯示作業

##2.將單連桿轉入V-rep並使其作動
</t>
<t tx="leo.20170328210949.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328210949.2">#練習

##1.如何在fossil筆記倉儲主頁顯示作業
</t>
<t tx="leo.20170328211120.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328211120.2">##只要在wiki裡新增一個與倉儲筆記同名稱的檔案，即可在fossil筆記倉儲主頁顯示作業
</t>
<t tx="leo.20170328211217.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328211217.2">&lt;img src="data/image W5/fossil_home.png" width="800" /&gt;
</t>
<t tx="leo.20170328211355.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328211355.2">##在建立wiki有三種格式可選擇，wiki、Markdown及html，安全性以wiki最高，Markdown其次，html最低
</t>
<t tx="leo.20170328211445.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328211445.2">&lt;img src="data/image W5/fossil_wiki.png" width="600" /&gt;
</t>
<t tx="leo.20170328211935.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328211935.2">#2.將單連桿轉入V-rep並使其作動

##先將在繪圖軟體繪製好的單連桿利用Import/Mesh匯入V-rep
</t>
<t tx="leo.20170328212059.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328212059.2">&lt;img src="data/image W5/V-rep import.png" width="600" /&gt;
</t>
<t tx="leo.20170328212138.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328212138.2">###接著利用Divide selected shapes將單連桿的零件分開

&lt;img src="data/image W5/V-rep Divide shapes.png" width="600" /&gt;
</t>
<t tx="leo.20170328212313.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328212313.2">###利用Add/Joint/Revolute新增一個旋轉軸

&lt;img src="data/image W5/V-rep onelink Revolute.png" width="600" /&gt;
</t>
<t tx="leo.20170328212409.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328212409.2">###將旋轉軸的位置跟繪製的軸合併再一起

&lt;img src="data/image W5/V-rep onelink Item position.png" width="600" /&gt;
</t>
<t tx="leo.20170328212520.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328212520.2">###設置好各零件的從屬關係

&lt;img src="data/image W5/V-rep onelink ass.png" width="600" /&gt;
</t>
<t tx="leo.20170328212710.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328212710.2">###接著設定旋轉軸的角速度，並固定單連桿

&lt;img src="data/image W5/V-rep onelink Joint Dynamic.png" width="600" /&gt;
</t>
<t tx="leo.20170328212804.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328212804.2">###接著將桿子設為動態物件

&lt;img src="data/image W5/V-rep onelink body Dynamic.png" width="600" /&gt;
</t>
<t tx="leo.20170328212931.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328212931.2">##練習心得

###發現V-rep是個非常強大的軟體，可以模擬真實的情況，單連桿是較為簡單的練習，因此很快就了解了狀況。
</t>
<t tx="leo.20170328213013.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328213013.2">&lt;iframe src="https://player.vimeo.com/video/210093581" width="640" height="454" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/210093581"&gt;40423245機械設計工程系 - 協同產品設計實習課程-W5上課練習&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</t>
<t tx="leo.20170328213249.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328213249.2">##回家練習

###將四連桿導入V-rep
</t>
<t tx="leo.20170328213338.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328213338.2">&lt;iframe src="https://player.vimeo.com/video/210037771" width="640" height="454" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/210037771"&gt;40423245機械設計工程系 - 協同產品設計實習課程-W5回家練習&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</t>
<t tx="leo.20170328213345.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328213345.2">##回家練習心得

###四連桿相較於單連趕多了個Dummy，在它的使用上花費了不少時間。
</t>
<t tx="leo.20170328213352.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328213352.2">###跟單連桿一樣先將檔案轉入V-rep，接著將零件分開，之後加入一個旋轉軸，將旋轉軸的位置跟繪製的軸合併再一起

&lt;img src="data/image W5/V-rep Item position.png" width="480" /&gt;
</t>
<t tx="leo.20170328213356.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328213356.2">###四個旋轉軸都設定好了之後，設定好各零件的從屬關係

&lt;img src="data/image W5/V-rep ass.png" width="600" /&gt;
</t>
<t tx="leo.20170328213400.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328213400.2">###加入兩個Dummy，一個放置在最後一個旋轉軸，另一個放置在第一桿子下

&lt;img src="data/image W5/V-rep Dummy.png" width="600" /&gt;
</t>
<t tx="leo.20170328213624.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328213624.2">###設定好兩者的關係

&lt;img src="data/image W5/V-rep Scene Object.png" width="600" /&gt;
</t>
<t tx="leo.20170410195046.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170410195046.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170410195046.3">#第六週上課筆記

##1.利用Onshape裡的變數指令來繪製四連桿，並匯入V-rep裝上馬達。
</t>
<t tx="leo.20170410195103.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170410195103.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170410195103.3">#第七週上課筆記

##1.利用fossil對倉儲進行管理練習

##2.利用Onshape繪製八連桿

##3.將八連桿匯入V-rep並使其作動

</t>
<t tx="leo.20170410195829.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170410195829.2">##1.Fossil新增組員以及組員權限設定

###fossil開啟後 ，到admin/user/add裡可新增筆記倉儲裡的成員
</t>
<t tx="leo.20170410195831.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170410195831.2">##2.在Onshape繪製單連桿機構並轉出stl檔案

###繪製出所需零件 ，底座、軸及單連桿，並將其組立起來
</t>
<t tx="leo.20170410195838.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170410195838.2">##3.在solvespace繪製單連桿機構並轉出stl檔案

###繪製出所需零件 ，底座、軸及單連桿，並將其組立起來
</t>
<t tx="leo.20170410200306.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170410200306.2">&lt;img src="data/image W4/fossil add user.png" width="640" /&gt;
</t>
<t tx="leo.20170410200547.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170410200547.2">&lt;a href="https://cad.onshape.com/documents/414f3a744b87a17b4d845380/w/576a159abfb695fa37f8e121/e/e6da162a4b20484587e269d6"&gt;Onshape單連桿機構&lt;/a&gt;
</t>
<t tx="leo.20170410200856.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170410200856.2">&lt;img src="data/image W4/ass.png" width="640" /&gt;
</t>
<t tx="leo.20170410201058.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170410201058.2">##練習心得

###這禮拜所繪製的單連桿零件還蠻簡單的。
</t>
<t tx="leo.20170410201130.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170410201130.2">###1.Fossil新增組員以及組員權限設定

&lt;iframe src="https://player.vimeo.com/video/208973584" width="640" height="454" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/208973584"&gt;40423245機械設計工程系 - 協同產品設計實習課程-W4Fossil新增組員以及組員權限設定&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</t>
<t tx="leo.20170410202610.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170410202610.2">####2.在Onshape繪製單連桿機構並轉出stl檔案

&lt;iframe src="https://player.vimeo.com/video/208973817" width="640" height="454" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/208973817"&gt;40423245機械設計工程系 - 協同產品設計實習課程-W4在Onshape繪製單連桿機構並轉出stl檔案&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</t>
<t tx="leo.20170410202615.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170410202615.2">####3.在solvespace繪製單連桿機構並轉出stl檔案

&lt;iframe src="https://player.vimeo.com/video/208973989" width="640" height="454" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/208973989"&gt;40423245機械設計工程系 - 協同產品設計實習課程-W4在solvespace繪製單連桿機構並轉出stl檔案&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</t>
<t tx="leo.20170410202619.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170410202619.2">###回家練習

&lt;iframe src="https://player.vimeo.com/video/208974147" width="640" height="454" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/208974147"&gt;40423245機械設計工程系 - 協同產品設計實習課程-W4將stl檔轉入Vrep並使單連桿作動&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</t>
<t tx="leo.20170410203206.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170410203206.2">##練習影片
</t>
<t tx="leo.20170411203137.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411203137.2">##在Onshape裡建立一個新文件，並設定好參數設定

&lt;img src="data/image W6/Onshape Variable.png" width="480" /&gt;


</t>
<t tx="leo.20170411203156.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411203156.2">##接著繪製草圖，在標註尺寸時利用#+參數名稱加入設定好的參數，並將其擠出為零件

&lt;img src="data/image W6/Onshape link and joint.png" width="480" /&gt;

</t>
<t tx="leo.20170411203157.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411203157.2">##接著在組合件裡匯入零件，並利用&lt;img src="data/image W6/Onshape 轉動.png" width="40" /&gt;指令組立桿子，利用&lt;img src="data/image W6/Onshape 緊固.png" width="40" /&gt;指令組立軸

</t>
<t tx="leo.20170411203159.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411203159.2">&lt;img src="data/image W6/Onshape ass.png" width="480" /&gt;


</t>
<t tx="leo.20170411203400.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411203400.2">&lt;a href="https://cad.onshape.com/documents/2a72700429928831c3ee6f49/w/f729c21a318454e00a730da2/e/6abaf474022c06b4d4cb8063"&gt;Onshape四連桿機構&lt;/a&gt;


</t>
<t tx="leo.20170411203438.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411203438.2">###接著將組立好的四連桿轉出stl，並匯入V-rep，將各個零件分開，加入旋轉軸，加入馬達，將桿子設為動態物件後，設好從屬關係。

&lt;img src="data/image W6/V-rep 從屬關係.png" width="480" /&gt;


</t>
<t tx="leo.20170411203440.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411203440.2">##接著新增兩個Dummy

&lt;img src="data/image W6/V-rep add dummy.png" width="480" /&gt;


</t>
<t tx="leo.20170411203442.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411203442.2">##並設定兩個Dummy的關係Dynamics

&lt;img src="data/image W6/V-rep dummy opition.png" width="480" /&gt;


</t>
<t tx="leo.20170411203609.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411203609.2">##心得

###這禮拜加入了Dummy的工具，還不太熟悉需要好好的研究一下。


</t>
<t tx="leo.20170411203624.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411203624.2">&lt;iframe src="https://player.vimeo.com/video/211471124" width="640" height="454" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/211471124"&gt;40423245機械設計工程系 - 協同產品設計實習課程-W6上課練習&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

</t>
<t tx="leo.20170411214326.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411214326.2">

#1.利用fossil對倉儲進行管理練習



</t>
<t tx="leo.20170411214328.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411214328.2">##利用以下指令對fossil倉儲進行管理

###fossil clone uri foo.fossil (將遠端的倉儲下載下來)

###fossil open ./../../foo.fossil (將下載下來的倉儲打開)

###fossil add . (將改版的倉儲推至暫存區)


</t>
<t tx="leo.20170411214414.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411214414.2">###fossil remote-url off (將自動推送改為手動，這是與git不同之處，fossil會自動推送)

###fossil push https://user@192.168.X.XX  (將暫存區的檔案推至遠端)

</t>
<t tx="leo.20170411214416.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411214416.2">#2.利用Onshape繪製八連桿

</t>
<t tx="leo.20170411214707.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411214707.2">###與四連桿相同利用參數指令繪製零件，並利用轉動指令及緊固指令將八連桿組立起來

&lt;img src="data/image W7/Onshape 8link ass.png" width="480" /&gt;
</t>
<t tx="leo.20170411214709.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411214709.2">##零件連結 ：

&lt;a href="https://cad.onshape.com/documents/8f27e94d797527621c7de57f/w/348f7b820c41f1e00e927d58/e/ac94e18b0e62ac367e76fc53"&gt;Onshape八連桿機構&lt;/a&gt;
</t>
<t tx="leo.20170411214833.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411214833.2">#3.將八連桿匯入V-rep並使其作動
</t>
<t tx="leo.20170411214858.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411214858.2">####與四連桿相同，只不過這次加入了更多的Dummy，因此在其從屬關係上須特別小心。

&lt;img src="data/image W7/V-rep 8 link relationship .png" width="480" /&gt;
</t>
<t tx="leo.20170411215249.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411215249.2">
&lt;iframe src="https://player.vimeo.com/video/212450094" width="640" height="454" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/212450094"&gt;40423245機械設計工程系 - 協同產品設計實習課程W7-利用fossil對倉儲進行管理練習&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</t>
<t tx="leo.20170411215250.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411215250.2">&lt;iframe src="https://player.vimeo.com/video/212448923" width="640" height="454" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/212448923"&gt;40423245機械設計工程系 - 協同產品設計實習課程W7-利用Onshape繪製八連桿&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</t>
<t tx="leo.20170411215251.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411215251.2">&lt;iframe src="https://player.vimeo.com/video/212447799" width="640" height="454" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/212447799"&gt;40423245機械設計工程系 - 協同產品設計實習課程-W7-將八連桿匯入V-rep並使其作動&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</t>
<t tx="leo.20170411215419.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411215419.2">#心得

##這禮拜加入更多的Dummy，以及在桿子上的從屬關係更加的複雜，讓我在練習上有些手無足措，也花了滿久的時間，這禮拜還加入了fossil的倉儲管理，fossil對我來說還相當新鮮，需要盡快地了解其架構。
</t>
<t tx="leo.20170506181907.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170506181907.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170506181907.11">#2.

&lt;p&gt;個人自評: &lt;a href="http://mde1a2.kmol.info:8000/k96tgzh1ofbl"&gt;http://mde1a2.kmol.info:8000/k96tgzh1ofbl&lt;/a&gt;&lt;/p&gt;
</t>
<t tx="leo.20170506181907.16">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170506181907.17">###3.只要在 google上搜尋 site:edu.tw hyperworks 即可以找到放置在結尾為 edu.tw 裡有 hyperworks 的資料
</t>
<t tx="leo.20170506181907.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170506181907.3">#第八週上課筆記



</t>
<t tx="leo.20170506181907.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170506181907.5">##1.
&lt;p&gt;小組互評: &lt;a href="https://pygroup-ag100.rhcloud.com"&gt;https://pygroup-ag100.rhcloud.com&lt;/a&gt;&lt;/p&gt;



</t>
<t tx="leo.20170506182504.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170506182504.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170506182504.3">#第九週上課筆記



</t>
<t tx="leo.20170506182526.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170506182526.2">#期中考



</t>
<t tx="leo.20170506182727.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170506182727.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170506182727.3">#第十週上課筆記

##將期中考週繪製的四連桿匯入V-rep 模擬


</t>
<t tx="leo.20170506182955.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170506182955.2">##1.先將Onshape所繪製好的零件匯出成stl檔，接著匯入V-rap裡，並將各零件分解開來。




</t>
<t tx="leo.20170506183107.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170506183107.2">&lt;img src="data/W10/Image W10/V-rep Divide shape.png" width="460" /&gt;



</t>
<t tx="leo.20170506183209.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170506183209.2">&lt;img src="data/W10/Image W10/V-rep add Revolute .png" width="480" /&gt;



</t>
<t tx="leo.20170506183215.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170506183215.2">##2.接著加入旋轉軸，與定位軸的位置重合，並將定位軸隱藏。






</t>
<t tx="leo.20170506183317.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170506183317.2">##3.最後只要移好各零件與旋轉軸相對位置，即可加入馬達，將各零件實體化，就可以開始模擬了。







</t>
<t tx="leo.20170506183320.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170506183320.2">&lt;img src="data/W10/Image W10/V-rep Dummy.png" width="480" /&gt;



</t>
<t tx="leo.20170506183412.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170506183412.2">&lt;iframe src="https://player.vimeo.com/video/214997443" width="640" height="450" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/214997443"&gt;40423245機械設計工程系 - 協同產品設計實習課程W9-將期中考所繪製的Fourbar Walker匯入V-rep並使其作&amp;aring;&amp;lsaquo;&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;



</t>
<t tx="leo.20170510181722.1"></t>
<t tx="leo.20170510181722.2">&lt;canvas id='gear2' width='800' height='700'&gt;&lt;/canvas&gt;
 
&lt;script type="text/python3"&gt;
# 導入 browser 模組中的 document, 並設為 doc 變數
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx
 
    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
 
# 準備在 id="gear2" 的 canvas 中繪圖
canvas = doc["gear2"]
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.width/2)
# 齒數
n = 53
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")
&lt;/script&gt;</t>
<t tx="leo.20170510181722.3">&lt;canvas id='gear1' width='800' height='750'&gt;&lt;/canvas&gt;
 
&lt;script type="text/python"&gt;
# 將 導入的 document 設為 doc 主要原因在於與舊程式碼相容
from browser import document as doc
# 由於 Python3 與 Javascript 程式碼已經不再混用, 因此來自 Javascript 的變數, 必須居中透過 window 物件轉換
from browser import window
# 針對 Javascript 既有的物件, 則必須透過 JSConstructor 轉換
from javascript import JSConstructor
import math
 
# 主要用來取得畫布大小
canvas = doc["gear1"]
# 此程式採用 Cango Javascript 程式庫繪圖, 因此無需 ctx
#ctx = canvas.getContext("2d")
# 針對類別的轉換, 將 Cango.js 中的 Cango 物件轉為 Python cango 物件
cango = JSConstructor(window.Cango)
# 針對變數的轉換, shapeDefs 在 Cango 中資料型別為變數, 可以透過 window 轉換
shapedefs = window.shapeDefs
# 目前 Cango 結合 Animation 在 Brython 尚無法運作, 此刻只能繪製靜態圖形
# in CangoAnimation.js
#interpolate1 = window.interpolate
# Cobi 與 createGearTooth 都是 Cango Javascript 程式庫中的物件
cobj = JSConstructor(window.Cobj)
creategeartooth = JSConstructor(window.createGearTooth)
 
# 經由 Cango 轉換成 Brython 的 cango, 指定將圖畫在 id="plotarea" 的 canvas 上
cgo = cango("gear1")
 
######################################
# 畫正齒輪輪廓
#####################################
# n 為齒數
n = 17
# pa 為壓力角
pa = 25
# m 為模數, 根據畫布的寬度, 計算適合的模數大小
# Module = mm of pitch diameter per tooth
m = 0.8*canvas.width/n
# pr 為節圓半徑
pr = n*m/2 # gear Pitch radius
# generate gear
data = creategeartooth(m, n, pa)
# Brython 程式中的 print 會將資料印在 Browser 的 console 區
#print(data)
gearTooth = cobj(data, "SHAPE", {
        "fillColor":"#ddd0dd",
        "border": True,
        "strokeColor": "#606060" })
gearTooth.rotate(180/n) # rotate gear 1/2 tooth to mesh
# 單齒的齒形資料經過旋轉後, 將資料複製到 gear 物件中
gear = gearTooth.dup()
# gear 為單一齒的輪廓資料
#cgo.render(gearTooth)
 
# 利用單齒輪廓旋轉, 產生整個正齒輪外形
for i in range(1, n):
    # 將 gearTooth 中的資料複製到 newTooth
    newTooth = gearTooth.dup()
    # 配合迴圈, newTooth 的齒形資料進行旋轉, 然後利用 appendPath 方法, 將資料併入 gear
    newTooth.rotate(360*i/n)
    # appendPath 為 Cango 程式庫中的方法, 第二個變數為 True, 表示要刪除最前頭的 Move to SVG Path 標註符號
    gear.appendPath(newTooth, True) # trim move command = True
 
# 建立軸孔
# add axle hole, hr 為 hole radius
hr = 0.6*pr # diameter of gear shaft
shaft = cobj(shapedefs.circle(hr), "PATH")
shaft.revWinding()
gear.appendPath(shaft) # retain the 'moveTo' command for shaft sub path
cx = canvas.width/2
cy = canvas.height/2
gear.translate(cx, cy)
# render 繪出靜態正齒輪輪廓
cgo.render(gear)
&lt;/script&gt;</t>
<t tx="leo.20170510181722.4">#https://github.com/utlco/tcnc/blob/master/tcnc/geom/fillet.py
#-----------------------------------------------------------------------------
# Copyright 2012-2016 Claude Zervas
# email: claude@utlco.com
#-----------------------------------------------------------------------------
"""
Connect Line/Arc segments with a fillet arc.
"""
# Python 3 compatibility boilerplate
from __future__ import (absolute_import, division,
                        print_function, unicode_literals)
from future_builtins import *

import math

# For debugging:
import logging
logger = logging.getLogger(__name__)

from . import debug
from . import const
from .line import Line
from .arc import Arc

def fillet_path(path, radius, fillet_close=True):
    """Attempt to insert a circular arc of the specified radius
    to connect adjacent path segments.

    Args:
        path: A list of Line or Arc segments.
        radius: The radius of the fillet arc.
        fillet_close: If True and the path is closed then
            add a terminating fillet. Default is False.

    Returns:
        A new path with fillet arcs. If no fillets are created then
        the original path will be returned.
    """
    if radius &lt; const.EPSILON or len(path) &lt; 2:
        return path
    new_path = []
    seg1 = path[0]
    for seg2 in path[1:]:
        new_segs = insert_fillet(seg1, seg2, radius)
        if new_segs:
            new_path.extend(new_segs[:-1])
            seg2 = new_segs[-1]
        else:
            new_path.append(seg1)
        seg1 = seg2
    new_path.append(seg1)
    # Close the path with a fillet
    if fillet_close and len(path) &gt; 2 and path[0].p1 == path[-1].p2:
        new_segs = insert_fillet(new_path[-1], new_path[0], radius)
        if new_segs:
            new_path[-1] = new_segs[0]
            new_path.append(new_segs[1])
            new_path[0] = new_segs[2]
    # Discard the path copy if no fillets were created...
    return new_path if len(new_path) &gt; len(path) else path


def fillet_polygon(poly, radius, fillet_close=True):
    """Attempt to insert a circular arc of the specified radius
    connecting adjacent polygon segments.

    Args:
        poly: A list of polygon vertices.
        radius: The radius of the fillet arc.
        fillet_close: If True and the path is closed then
            add a terminating fillet. Default is True.

    Returns:
        A new path with fillet arcs as a list of Line and Arc segments.
        If no fillets are created then the original path will be returned.
    """
    if len(poly) &lt; 2:
        return ()
    seg1 = Line(poly[0], poly[1])
    if len(poly) == 2:
        return (seg1,)
    path = []
    for p in poly[2:]:
        seg2 = Line(seg1.p2, p)
        new_segs = insert_fillet(seg1, seg2, radius)
        if new_segs:
            path.append(new_segs[0])
            path.append(new_segs[1])
            seg1 = new_segs[2]
        else:
            path.append(seg1)
            seg1 = seg2
    path.append(seg1)
    if fillet_close and len(path) &gt; 2 and path[0].p1 == path[-1].p2:
        new_segs = insert_fillet(path[-1], path[0], radius)
        if new_segs:
            path[-1] = new_segs[0]
            path.append(new_segs[1])
            path[0] = new_segs[2]
    return path


def insert_fillet(seg1, seg2, radius):
    """Try to create a fillet between two segments.
    Any GCode rendering hints attached to the segments will
    be preserved.

    Args:
        seg1: First segment, an Arc or a Line.
        seg2: Second segment, an Arc or a Line.
        radius: Fillet radius.

    Returns:
        A tuple containing the adjusted segments and fillet arc:
        (seg1, fillet_arc, seg2)
        Returns an empty tuple if the segments cannot be connected
        with a fillet arc (either they are too small
        or somehow degenerate.)
    """
    farc = create_fillet_arc(seg1, seg2, radius)
    if farc is None:
        return ()
    return connect_fillet(seg1, farc, seg2)


def connect_fillet(seg1, farc, seg2):
    """Connect two segments with a fillet arc.
    This will adjust the lengths of the segments to
    accommodate the fillet."""
    if isinstance(seg1, Line):
        new_seg1 = Line(seg1.p1, farc.p1)
        if isinstance(seg2, Line):
            # Connect Line-&gt;Fillet-&gt;Line
            new_seg2 = Line(farc.p2, seg2.p2)
        else:
            # Connect Line-&gt;Fillet-&gt;Arc
            new_angle = seg2.angle - seg2.center.angle2(seg2.p1, farc.p2)
            new_seg2 = Arc(farc.p2, seg2.p2, seg2.radius, new_angle,
                                seg2.center)
    else:
        new_angle = seg1.angle - seg1.center.angle2(farc.p1, seg1.p2)
        new_seg1 = Arc(seg1.p1, farc.p1, seg1.radius, new_angle,
                            seg1.center)
        if isinstance(seg2, Line):
            # Connect Arc-&gt;Fillet-&gt;Line
            new_seg2 = Line(farc.p2, seg2.p2)
        else:
            # Connect Arc-&gt;Fillet-&gt;Arc
            new_angle = seg2.angle - seg2.center.angle2(seg2.p1, farc.p2)
            new_seg2 = Arc(farc.p2, seg2.p2, seg2.radius, new_angle,
                                seg2.center)
    return (new_seg1, farc, new_seg2)


def create_fillet_arc(seg1, seg2, radius):
    """Try to create a fillet between two segments.

    Args:
        seg1: First segment, an Arc or a Line.
        seg2: Second segment, an Arc or a Line.
        radius: Fillet radius.

    Returns:
        A fillet arc or None if the segments cannot be connected
        with a fillet arc (either they are too small, already G1
        continuous, or are somehow degenerate.)
    """
    farc = None
    if isinstance(seg1, Line):
        if isinstance(seg2, Line):
            farc = fillet_line_line(seg1, seg2, radius)
        elif isinstance(seg2, Arc):
            farc = fillet_line_arc(seg1, seg2, radius)
    elif isinstance(seg1, Arc):
        if isinstance(seg2, Line):
            farc = fillet_line_arc(seg2, seg1, radius)
        elif isinstance(seg2, Arc):
            farc = fillet_arc_arc(seg1, seg2, radius)
    return farc


def fillet_line_line(line1, line2, fillet_radius):
    """Create a fillet arc between two line segments.

    Args:
        line1: A Line.
        line2: A Line connected to line1.
        fillet_radius: The radius of the fillet.

    Returns:
        An Arc, or None if the fillet radius is too big to fit or
        if the two segments are not connected.
    """
    fillet_arc = None # default return value
    lineside = line1.which_side(line2.p2)
    offset = fillet_radius * lineside
    offset_line1 = line1.offset(offset)
    offset_line2 = line2.offset(offset)
    fillet_center = offset_line1.intersection(offset_line2)
    if fillet_center is not None:
        fp1 = line1.normal_projection_point(fillet_center, segment=True)
        fp2 = line2.normal_projection_point(fillet_center, segment=True)
        # Test for fillet fit
        if (fp1 is not None and fp2 is not None and fp1 != fp2
                and const.float_eq(fp1.distance(fillet_center), fillet_radius)
                and const.float_eq(fp2.distance(fillet_center), fillet_radius)):
            fillet_arc = Arc.from_two_points_and_center(fp1, fp2,
                                                       fillet_center)
    return fillet_arc


def fillet_arc_arc(arc1, arc2, fillet_radius):
    """Create a fillet arc between two connected arcs.

    Args:
        arc1: First arc.
        arc2: Second arc.
        fillet_radius: The radius of the fillet.

    Returns:
        An Arc,
        or None if the fillet radius is too big to fit or
        if the two segments are not connected.
    """
    fillet_arc = None # default return value
    arc2_side = arc1.which_side_angle(arc2.start_tangent_angle())
    cw1 = 1 if arc1.is_clockwise() else -1
    cw2 = 1 if arc2.is_clockwise() else -1
    offset_arc1 = arc1.offset(fillet_radius * arc2_side * cw1)
    offset_arc2 = arc2.offset(fillet_radius * arc2_side * cw2)
    # The intersection of the two offset arcs is the fillet arc center.
    offset_intersections = offset_arc1.intersect_arc(offset_arc2, on_arc=True)
    if offset_intersections:
        fillet_center = offset_intersections[0]
        # Find points normal from fillet center to arc segments
        fline1 = Line(fillet_center, arc1.center)
        fline2 = Line(fillet_center, arc2.center)
        ix1 = arc1.intersect_line(fline1, on_arc=True)
        ix2 = arc2.intersect_line(fline2, on_arc=True)
        if ix1 and ix2:
            fillet_arc = Arc.from_two_points_and_center(ix1[0], ix2[0],
                                                        fillet_center)
    return fillet_arc


def fillet_line_arc(line, arc, fillet_radius):
    """Create a fillet arc between a line segment and a connected arc.
    The fillet arc end point order will match the line-arc order.

    Args:
        line: A Line.
        arc: An Arc.
        fillet_radius: The radius of the fillet.

    Returns:
        An Arc,
        or None if the fillet radius is too big to fit or
        if the two segments are not connected.
    """
    debug.draw_arc(arc, verbose=True)
    # TODO: Maybe replace this novel approach with the more usual
    # offset intersection method..
    fillet_arc = None # default return value

    # If the direction is arc-&gt;line then reverse both
    # to make things simpler.
    is_reversed = False
    if const.float_eq(arc.p2, line.p1):
        # The two segments are connected but in reverse order.
        line = line.reversed()
        arc = arc.reversed()
        is_reversed = True

    arc_side = line.which_side_angle(arc.start_tangent_angle())
    if ((arc_side &gt; 0 and arc.is_clockwise()) or
        (arc_side &lt; 0 and not arc.is_clockwise())):
        h = arc.radius + fillet_radius
        alpha1 = line.angle() + math.pi
    else:
        h = arc.radius - fillet_radius
        alpha1 = line.angle()
    line3 = line.offset(fillet_radius * arc_side)
    p5 = line3.normal_projection_point(arc.center)
    b = p5.distance(arc.center)
    a2 = h*h - b*b
    if a2 &lt; 0:
        return
    a = math.sqrt(a2)
    line4 = Line.from_polar(p5, a, alpha1)
    fillet_center = line4.p2
    alpha2 = abs(arc.center.angle2(arc.p1, fillet_center))
    fp1 = line.normal_projection_point(fillet_center, segment=True)
    fp2 = arc.point_at_angle(alpha2, segment=True)
    if (fp1 is not None and fp2 is not None and fp1 != fp2 and
        const.float_eq(fillet_center.distance(fp1),
                      fillet_center.distance(fp2))):
        if is_reversed:
            fillet_arc = Arc.from_two_points_and_center(fp2, fp1,
                                                             fillet_center)
        else:
            fillet_arc = Arc.from_two_points_and_center(fp1, fp2,
                                                             fillet_center)
    return fillet_arc</t>
<t tx="leo.20170510181722.5">  以下程式對應 canvas:
  
&lt;canvas id="cvs0" width="475" height="300"&gt;&lt;/canvas&gt;
  
&lt;script type="text/javascript"&gt;
    function distanceFromCurve(pt, bezNodes)
    {
      /* Calculates distance from point (pt) to the closest point on cubic Bezier curve (bez)
       * Algoritm suggested by Mike Kamermans http://pomax.github.io/bezierinfo/
       * Note: this is designed for well behaved Bezier curves only (no kinks)
       */
      var mu = 0.5,
          dMu = 1.0,
          dMuMin = 0.000001,
          testPt, testLft, testRgt;

      function pointOnBezier(p)
      {
        var x1 = bezNodes[0].x,
            y1 = bezNodes[0].y,
            x2 = bezNodes[1].x,
            y2 = bezNodes[1].y,
            x3 = bezNodes[2].x,
            y3 = bezNodes[2].y,
            x4 = bezNodes[3].x,
            y4 = bezNodes[3].y,
            f1 = function(t) { return (t*t*t); },
            f2 = function(t) { return (3*t*t*(1-t)); },
            f3 = function(t) { return (3*t*(1-t)*(1-t)); },
            f4 = function(t) { return ((1-t)*(1-t)*(1-t)); },
            /* p from 0 to 1 */
            bezX = function() { return x1*f1(p) + x2*f2(p) + x3*f3(p) + x4*f4(p); },
            bezY = function() { return y1*f1(p) + y2*f2(p) + y3*f3(p) + y4*f4(p); };

        return {x:bezX(), y:bezY()}
      }

      function calcDist(p, u)
      {
        var bezPt = pointOnBezier(u),
            distVal = Math.sqrt((bezPt.x-p.x)*(bezPt.x-p.x)+(bezPt.y-p.y)*(bezPt.y-p.y));

        return {distance: distVal, x: bezPt.x, y: bezPt.y};
      }

      do
      {
        testPt = calcDist(pt, mu);
        // half distance to left
        dMu /= 2;
        testLft = calcDist(pt, mu-dMu);
        testRgt = calcDist(pt, mu+dMu);
        if (testLft.distance&lt;testPt.distance)
        {
          mu -= dMu;
          if (mu&lt;0) { mu = 0; }
        }
        if (testRgt.distance&lt;testPt.distance)
        {
          mu += dMu;
          if (mu&gt;1) { mu = 1; }
        }
      }
      while (dMu&gt;dMuMin)

      return testPt;   // object {distance:, x:, y: }
    }

    function updateErrors(tbl, rowNum, str0, str1, str2)
    {
      var rowId = "t"+tbl+"row"+rowNum;
      var rowNode = document.getElementById(rowId);
      var tds = rowNode.getElementsByTagName("TD");   // array of TD elements
      tds[0].childNodes[0].nodeValue = str0;    // text node of TD element
      tds[1].childNodes[0].nodeValue = str1;
      tds[2].childNodes[0].nodeValue = str2;
    }

    function InvoluteDefined(cvsID, module, teeth, pressureAngle)
    {
      'use strict';
      var savThis = this,
          m, Z, phi, Rpitch, Rb, addendum, Ra,
          toothData, toothObj,
          pitchToBaseAngle,
          gear, invData,
          invMax, invMin,
          xspan, yspan,
          pt, A,
          cx1, cy1,
          c1,
          g, xmin, xmax, ymin, ymax,
          i, theta, newTooth;

      function toCartesian(radius, angle)
      {
        return {x: radius*Math.cos(angle), y: radius*Math.sin(angle)};
      }

      function genInvolute2(Rb, theta)
      {
        // given the parameter theta, return the x, y of the involute
        var ix = Rb*(Math.cos(theta) + theta*Math.sin(theta));
        var iy = Rb*(Math.sin(theta) - theta*Math.cos(theta));

        return {x:ix, y:iy};
      }

      function dragC1(mousePos)    // called in scope of dragNdrop obj
      {
        var xp, yp,
            wPos = {x:mousePos.x - this.grabOfs.x, y:mousePos.y - this.grabOfs.y};
// generate a value of A (involute generating angle) near to the drag point
// origin is at invMin and invMax is the end, get current pos as proportion of inv span
        xp = (wPos.x&lt;0)? 0: wPos.x/xspan;
        if (xp&gt;1)
        {
          xp = 1;
        }
        yp = (wPos.y&lt;0)? 0: wPos.y/yspan;
        if (yp&gt;1)
        {
          yp = 1;
        }
        A = Math.sqrt(0.707*Math.sqrt(xp*xp + yp*yp));
        pt = genInvolute2(Rb, A);
        cx1 = pt.x - Rb;
        cy1 = pt.y;
        savThis.drawInv();
      }

      g = new Cango(cvsID);      // g is the graphics context for the background
      xmin = -54;
      xmax = 20;
      ymin = -5;
      ymax = 40;

      g.setGridboxRHC();          // full canvas
      g.setWorldCoords(xmin, ymin, xmax-xmin);   // square pixels
      g.setPropertyDefault("fillColor", 'black');
      g.setPropertyDefault("fontSize", 12);
      // =============== DIN GEAR DESIGN ===================
      m = module;                // Module = teeth per inch of diamter
      Z = teeth;
      phi = pressureAngle || 20; // pressure angle in degs
      Rpitch = Z*m/2;                // pitch radius
      Rb = Rpitch*Math.cos(phi*Math.PI/180);  // base radius
      addendum = m;             // distance from pitch circle to outer circle
      Ra = Rpitch + addendum;       // addendum (outer) radius
      // generate gear tooth outline path
      toothData = createGearTooth(m, Z, phi);
      toothObj = new Path(toothData, {strokeColor:'red'});
      toothObj.rotate(-270/Z);
      // rotate the tooth to put start of involute on the x axis
      pitchToBaseAngle = (Math.sqrt(Rpitch*Rpitch - Rb*Rb)/Rb) - Math.acos(Rb/Rpitch);
      toothObj.rotate(180*pitchToBaseAngle/Math.PI);
      // make 5 teeth by duplicating
      gear = [];
      gear.push(toothObj);
      for (i=0, newTooth; i&lt;4; i++)
      {
        newTooth = toothObj.dup();
        newTooth.rotate(360*i/Z);
        gear.push(newTooth);
      }
      // now draw the extended involute
      invData = [];
      pt = {};
      for (theta=0; theta&lt;1; theta+= 0.05)   // step along involute by inc parameter
      {
        pt = genInvolute2(Rb, theta);
        invData.push(pt.x, pt.y);
      }
      invMax = genInvolute2(Rb, 1);
      invData.push(invMax.x, invMax.y);   // plot the last point (theta = 1 radian)
      invMin = {x:Rb, y: 0} ;
      xspan = invMax.x-invMin.x;      // use these when dragging dot
      yspan = invMax.y-invMin.y;
      A = 0.8;                    // initial involute generating angle 0.8 rads
      cx1 = 59.7-Rb;
      cy1 = 7.5;  // eqiv x,y on involute for 0.8 theta
      // compile the involute control point and make it draggable
      c1 = new Shape(shapeDefs.circle(2), {fillColor:'red', iso:true});
      c1.enableDrag(null, dragC1, null);

      this.showConst = false;    // show construction lines

      this.drawInv = function()
      {
        var compA, gPt, genLines;

        g.clearCanvas();
        g.drawAxes(xmin, xmax, ymin, ymax, {xOrigin:-Rb, yOrigin:0, yTickInterval:50, strokeColor:"#888888", fillColor:"#888888"});  // don't show y ticks
        g.render(gear, {x:-Rb, y:0});
        g.drawPath(shapeDefs.circle(Rb*2), {x:-Rb, y:0, strokeColor:'rgba(0,0,255,0.3)'});

        g.drawPath(invData, {x:-Rb, y:0, strokeColor:'magenta'});

        // draw generating right angle
        compA = Math.PI/2 - A;
        gPt = toCartesian(Rb, A);
        genLines = ['M', 0, 0, 'l', gPt.x, gPt.y, Rb*A*Math.cos(compA), -Rb*A*Math.sin(compA)];
        g.drawPath(genLines, {x:-Rb, y:0});
        // draw little right angle sign
        genLines = ['M', 0.95*gPt.x, 0.95*gPt.y, 'l', 0.05*Rb*Math.cos(compA), -0.05*Rb*Math.sin(compA),
                    0.05*Rb*Math.cos(A), 0.05*Rb*Math.sin(A)];
        g.drawPath(genLines, {x:-Rb, y:0});
        // draw draggable end point
        g.render(c1, {x:cx1, y:cy1});
        if (this.showConst)
        {
          genLines = ['M', 0, 0, 'L', gPt.x, gPt.y, gPt.x, 0, "Z", "M", gPt.x, gPt.y,
                      "l", Rb*A*Math.cos(compA), -Rb*A*Math.sin(compA), -Rb*A*Math.cos(compA), 0, "Z"];
          g.drawPath(genLines, {x:-Rb, y:0});
          // label if they fit
          g.drawText("R", {x:gPt.x/2-Rb-1.8, y:gPt.y/2+1.5, lorg:9});
          g.drawText("b", {x:gPt.x/2-Rb-1, y:gPt.y/2+1, fontSize:10, lorg:9});
          if (A&gt;0.3)
          {
            g.drawArrowArc(7.5, 0, 180*A/Math.PI, {
              x:-Rb, y:0,
              fillColor:"#aaaaaa",
              clockWise:false,
              shaftWidth:1,
              headSize:7});
            g.drawText("\u03B8", {x:gPt.x/4-Rb, y:gPt.y/8, lorg:4});
            g.drawText("x'", {x:2*gPt.x/3-Rb, y:2, lorg:5});
            g.drawText("y'", {x:gPt.x-Rb-1, y:gPt.y/3, lorg:3});
            g.drawText("\u03B8", {x:gPt.x-Rb+Rb*A*Math.sin(A)/20, y:gPt.y-4, lorg:1});
            g.drawText("x", {x:gPt.x-Rb+Rb*A*Math.sin(A)/2, y:gPt.y-Rb*A*Math.cos(A)+1, lorg:9});
            g.drawText("y", {x:gPt.x-Rb+1, y:2*gPt.y/3, lorg:1});
            g.drawText("c", {x:gPt.x-Rb+Rb*A*Math.sin(A)/2+1, y:gPt.y-Rb*A*Math.cos(A)/2+1, lorg:7});
            g.drawText("c'", {x:-Rb+Rb*Math.cos(A/2)-1, y:Rb*Math.sin(A/2)-1, lorg:6});
          }
        }
      };

      this.drawInv();
    }

    function InvoluteDefined2(cvsID, module, teeth, pressureAngle)
    {
      'use strict';
      var m, Z, phi,
          Rpitch, Rb, addendum, Ra,
          toothData, toothObj,
          pitchToBaseAngle,
          gear, i, newTooth,
          invData, pt, theta,
          invMax, invMin,
          xspan, yspan,
          A, cx1, cy1,
          compA, gPt,
          genLines, ph,
          g, xmin, xmax, ymin, ymax;

      function toCartesian(radius, angle)
      {
        return {x: radius*Math.cos(angle), y: radius*Math.sin(angle)};
      }

      function genInvolute2(Rb, theta)
      {
        // given the parameter theta, return the x, y of the involute
        var ix = Rb*(Math.cos(theta) + theta*Math.sin(theta)),
            iy = Rb*(Math.sin(theta) - theta*Math.cos(theta));

        return {x:ix, y:iy};
      }

      xmin = -45;
      xmax = 20;
      ymin = -4;
      ymax = 40;
      g = new Cango(cvsID);     // g is the graphics context for the background
      g.setGridboxRHC();          // full canvas
      g.setWorldCoords(xmin, ymin, xmax-xmin);  // square pixels
      g.setPropertyDefault("fillColor", 'black');
      g.setPropertyDefault("fontSize", 12);
      // =============== DIN GEAR DESIGN ===================
      m = module;                // Module = teeth per inch of diamter
      Z = teeth;
      phi = pressureAngle || 20; // pressure angle in degs
      Rpitch = Z*m/2;                // pitch radius
      Rb = Rpitch*Math.cos(phi*Math.PI/180);  // base radius
      addendum = m;             // distance from pitch circle to outer circle
      Ra = Rpitch + addendum;       // addendum (outer) radius
      // generate gear tooth outline path
      toothData = createGearTooth(m, Z, phi);
      toothObj = new Path(toothData, {strokeColor:'red'});
      toothObj.rotate(-270/Z);
      // rotate the tooth to put start of involute on the x axis
      pitchToBaseAngle = (Math.sqrt(Rpitch*Rpitch - Rb*Rb)/Rb) - Math.acos(Rb/Rpitch);
      toothObj.rotate(180*pitchToBaseAngle/Math.PI);
      // make 5 teeth by duplicating
      gear = [];
      gear.push(toothObj);
      for (i=0, newTooth; i&lt;3; i++)
      {
        newTooth = toothObj.dup();
        newTooth.rotate(360*i/Z);
        gear.push(newTooth);
      }
      // now draw the extended involute
      invData = [];
      pt = {};
      for (theta=0; theta&lt;1; theta+= 0.05)   // step along involute by inc parameter
      {
        pt = genInvolute2(Rb, theta);
        invData.push(pt.x, pt.y);
      }
      invMax = genInvolute2(Rb, 1);
      invData.push(invMax.x, invMax.y);   // plot the last point (theta = 1 radian)
      invMin = {x:Rb, y: 0} ;
      xspan = invMax.x-invMin.x;      // use these when dragging dot
      yspan = invMax.y-invMin.y;
      A = 0.8;                    // initial involute generating angle 0.8 rads
      cx1 = 59.7-Rb;
      cy1 = 7.5;  // eqiv x,y on involute for 0.8 theta

      g.clearCanvas();
      g.drawAxes(xmin, xmax, ymin, ymax, {
        xOrigin:-Rb, yOrigin:0,
        yTickInterval:50,
        strokeColor:"#888888",
        fillColor:"#888888"});  // don't show y ticks
      g.render(gear, {x:-Rb, y:0});
      g.drawPath(shapeDefs.circle(Rb*2), {x:-Rb, y:0, strokeColor:'rgba(0,0,255,0.3)'});
      g.drawPath(invData, {x:-Rb, y:0, strokeColor:'magenta'});
      // draw generating right angle
      compA = Math.PI/2 - A;
      gPt = toCartesian(Rb, A);
      genLines = ['M', 0, 0, 'l', gPt.x, gPt.y, Rb*A*Math.cos(compA), -Rb*A*Math.sin(compA), 'z'];
      g.drawPath(genLines, {x:-Rb, y:0});

      g.drawArrowArc(9, 0, 180*A/Math.PI, {
        x:-Rb, y:0,
        fillColor:"#aaaaaa",
        clockwise:false,
        shaftWidth:1,
        headSize:7});
      ph = 0.13;
      g.drawArrowArc(20, 0, 180*ph/Math.PI, {
        x:-Rb, y:0,
        fillColor:"#aaaaaa",
        clockWise:false,
        shaftWidth:1,  
        headSize:7});
      // draw little right angle sign
      genLines = ['M', 0.95*gPt.x, 0.95*gPt.y, 'l', 0.05*Rb*Math.cos(compA), -0.05*Rb*Math.sin(compA),
                  0.05*Rb*Math.cos(A), 0.05*Rb*Math.sin(A)];
      g.drawPath(genLines, {x:-Rb, y:0});
      // label if they fit
      g.drawText("R", {x:gPt.x/2-Rb-1.8, y:gPt.y/2+1.5, lorg:9});
      g.drawText("b", {x:gPt.x/2-Rb-1, y:gPt.y/2+1, fontSize:10, lorg:9});
      g.drawText("R", {x:gPt.x-Rb, y:gPt.y/6, lorg:9});
      g.drawText("\u03B8", {x:3*gPt.x/8-Rb, y:gPt.y/8, lorg:4});
      g.drawText("\u03C8", {x:7*gPt.x/8-Rb, y:1.5, lorg:5});
      g.drawText("c", {x:gPt.x-Rb+Rb*A*Math.sin(A)/2+1, y:gPt.y-Rb*A*Math.cos(A)/2+1, lorg:7});
      g.drawText("c'", {x:-Rb+Rb*Math.cos(A/2)-1, y:Rb*Math.sin(A/2)-1, lorg:6});
    }

    function InvoluteProfile(g, module, teeth, pressureAngle)
    {
      'use strict';
      var m, Z, phi, Rpitch, Rb, addendum, Ra, ta, order,
          fs, fm, fe,
          dedBez, addBez, bez,
          xmin, xmax, ymin, ymax;

      function genInvolute2(Rb, theta)
      {
        // given the parameter theta, return the x, y of the involute
        var ix = Rb*(Math.cos(theta) + theta*Math.sin(theta)),
            iy = Rb*(Math.sin(theta) - theta*Math.cos(theta));

        return {x:ix, y:iy};
      }

      xmin = -3;
      xmax = 3;
      ymin = -0.5;
      ymax = 5.5;

      g.setGridboxRHC();
      g.setWorldCoords(xmin, ymin, xmax-xmin);  // square pixels

      // =============== Demo Gear ===================
      m = module;                         // Module = pitch diameter (mm)/teeth
      Z = teeth;
      phi = pressureAngle || 20;          // pressure angle in degs
      Rpitch = Z*m/2;                     // pitch radius
      Rb = Rpitch*Math.cos(phi*Math.PI/180);  // base radius
      addendum = m;                       // pitch circle to outer circle
      Ra = Rpitch + addendum;             // addendum (outer) radius
      ta = Math.sqrt(Ra*Ra-Rb*Rb)/Rb;     // involute angle at addendum
      order = 4;

      this.drawCubicBezInvolute = function()
      {
        var data, p, theta, row, sa, s, err, pt;

        // generate 2 Cubic Bezier approximation
        fs = 0.01;  // start 1% off the base circle
        fm = 0.25;  // break 25% along involute
        fe = 1;     // end at 100%
        dedBez = involuteBezCoeffs(m, Z, phi, 3, fs, fm);
        addBez = involuteBezCoeffs(m, Z, phi, 3, fm, fe);

        g.clearCanvas();
        g.drawAxes(-5, 5, -5, 5, {
          xOrigin:0,
          yOrigin:0,
          xUnits:"mm",
          yUnits:"mm",
          xLabel:"X",
          yLabels:"Y" });
        g.drawPath(shapeDefs.circle(Rpitch*2), {x:-Rpitch, y:0, strokeColor:'orange'});
        g.drawPath(shapeDefs.circle(Rb*2), {x:-Rpitch, y:0, strokeColor:'red'});
        g.drawPath(shapeDefs.circle(Ra*2), {x:-Rpitch, y:0, strokeColor:'green'});

        // draw the approximation
        data = ["M", dedBez[0].x, dedBez[0].y,
                    "C", dedBez[1].x, dedBez[1].y, dedBez[2].x, dedBez[2].y, dedBez[3].x, dedBez[3].y,
                    "C", addBez[1].x, addBez[1].y, addBez[2].x, addBez[2].y, addBez[3].x, addBez[3].y];
        g.drawPath(data, {x:-Rpitch, y:0, strokeColor:'blue'});
        // plot the Bezier nodes as exes
        for (p=0; p&lt;dedBez.length; p++)    // skip duplicate at start
        {
          g.drawPath(shapeDefs.ex(0.2), {x:dedBez[p].x-Rpitch, y:dedBez[p].y, strokeColor:'blue'});
        }
        // plot the Bezier nodes
        for (p=0; p&lt;addBez.length; p++)    // skip duplicate at start
        {
          g.drawPath(shapeDefs.cross(0.2), {x:addBez[p].x-Rpitch, y:addBez[p].y, strokeColor:'green'});
        }
        // calculate the errors
        sa = (Ra*Ra - Rb*Rb)/(2*Rb);
        for (theta=0.08, row=0; theta&lt;ta; theta+= 0.08, row++)   // step along involute
        {
          pt = genInvolute2(Rb, theta);
          // calculate the errors
          s = Rb*theta*theta/2;
          if ((s/sa) &lt; 0.25)
          {
            err = distanceFromCurve(pt, dedBez);
          }
          else
          {
            err = distanceFromCurve(pt, addBez);
          }
          // write the error in table
          updateErrors(2, row, sprintf("%4.2f", s/sa), sprintf("%7.5f", err.distance), sprintf("%.1E", err.distance/(Z*m)));
        }
      };

      this.drawRealInvolute = function()
      {
        var theta, pt,
          data = [];

        // now draw the real involute
        for (theta=0; theta&lt;ta; theta+= 0.01)   // step along involute
        {
          pt = genInvolute2(Rb, theta);
          data.push(pt.x, pt.y);
        }
        pt = genInvolute2(Rb, ta);     // add the end point
        data.push(pt.x, pt.y);
        g.drawPath(data, {x:-Rpitch, y:0, strokeColor:'magenta'});
      };

      this.drawCubicBezInvolute();
      this.drawRealInvolute();
    }

    function InvoluteOrderN(g, module, teeth, pressureAngle, bezOrder)
    {
      'use strict';
      var m, Z, phi, Rpitch, Rb, addendum, Ra, order,
          fs, fe,
          ta, ts,
          bez,
          xmin, xmax, ymin, ymax;

      function genInvolute2(Rb, theta)
      {
        // given the parameter theta, return the x, y of the involute
        var ix = Rb*(Math.cos(theta) + theta*Math.sin(theta)),
            iy = Rb*(Math.sin(theta) - theta*Math.cos(theta));

        return {x:ix, y:iy};
      }

     /* Computes deCasteljau p(t) for n-control points
      * @param cp - list of control points [][x,y]
      * @param r - amount points (init value : points.length-1)
      * @param i - start value (init value : 0)
      * @param t - portion on the graph (range between 0.0 and 1.0)
      * @return point{x:,y:} - point on graph at p(t)
      *
      * @see http://stackoverflow.com/a/6271870 for n-control points
      */
      function getBezierPoint(cp, r, i, t)
      {
        var p1, p2;

        if (r == 0)
        {
          return cp[i];
        }
        p1 = getBezierPoint(cp, r - 1, i, t);
        p2 = getBezierPoint(cp, r - 1, i + 1, t);

        return {x:(1 - t) * p1.x + t * p2.x, y:(1 - t) * p1.y + t * p2.y};
      }

      xmin = -3;
      xmax = 3;
      ymin = -0.5;
      ymax = 5.5;

      g.setGridboxRHC();          // full canvas
      g.setWorldCoords(xmin, ymin, xmax-xmin);  // square pixels

      // =============== this Demo Gear has Rroot &lt; Rbase ===================
      m = module;                         // Module = pitch diameter (mm)/teeth
      Z = teeth;
      phi = pressureAngle || 20;          // pressure angle in degs
      Rpitch = Z*m/2;                     // pitch radius
      Rb = Rpitch*Math.cos(phi*Math.PI/180);  // base radius
      addendum = m;                       // pitch circle to outer circle
      Ra = Rpitch + addendum;             // addendum (outer) radius
      order = bezOrder || 4;
      fs = 0.01;                          // start offset as fraction of length
      fe = 1;                             // fraction of length at end of approx
      ta = Math.sqrt(Ra*Ra-Rb*Rb)/Rb;     // involute angle at addendum, end of approx
      ts = Math.sqrt(fs)*ta;              // involute angle, theta, at start of approx
      // generate Bezier approximation
      bez = involuteBezCoeffs(m, Z, phi, order, fs, fe);

      this.drawBezInvolute = function()
      {
        var data = [],
            t, p, pt, theta, row,
            sa, s, err;

        g.clearCanvas();
        g.drawAxes(-5, 5, -5, 5, {
          xOrigin:0,
          yOrigin:0,
          xUnits:"mm",
          yUnits:"mm",
          xLabel:"X",
          yLabels:"Y"});
        g.drawPath(shapeDefs.circle(Rpitch*2), {x:-Rpitch, y:0, strokeColor:'orange'});
        g.drawPath(shapeDefs.circle(Rb*2), {x:-Rpitch, y:0, strokeColor:'red'});
        g.drawPath(shapeDefs.circle(Ra*2), {x:-Rpitch, y:0, strokeColor:'green'});

        // draw approximation Bezier
        for (theta=ts; theta&lt;ta; theta+= 0.05) // fraction of theta_a
        {
          t =  (theta-ts)/(ta - ts);  // map t (0 &lt;= t &lt;= 1) from theta (ts &lt;= theta &lt;= ta)
          pt = getBezierPoint(bez, order, 0, t);
          data.push(pt.x, pt.y);
        }
        // add the end point
        data.push(bez[bez.length-1].x, bez[bez.length-1].y);
        g.drawPath(data, {x:-Rpitch, y:0, strokeColor:'green'});
        // plot the Bezier nodes
        for (p=0; p&lt;bez.length; p++)
        {
          g.drawPath(shapeDefs.ex(0.2), {x:bez[p].x-Rpitch, y:bez[p].y, strokeColor:'green'});
        }

        // calculate the errors (need a higher order version of Simon Porritt's jsBezier code)
        if (order==3)
        {
          sa = (Ra*Ra - Rb*Rb)/(2*Rb);
          for (theta=0.08, row=0; theta&lt;ta; theta+= 0.08, row++)   // step along involute
          {
            pt = genInvolute2(Rb, theta);
            // calculate the errors
            s = Rb*theta*theta/2;
            err = distanceFromCurve(pt, bez);
            // write the error in table
            updateErrors(1, row, sprintf("%4.2f", s/sa),
                                 sprintf("%6.4f", err.distance),
                                 sprintf("%.1E", err.distance/(Z*m)));
          }
        }
      };

      this.drawRealInvolute = function()
      {
        var theta, pt,
            data = [];

        // now draw the real involute
        for (theta=0; theta&lt;ta; theta+= 0.01)   // step along involute by inc parameter
        {
          pt = genInvolute2(Rb, theta);
          data.push(pt.x, pt.y);
        }
        pt = genInvolute2(Rb, ta);     // add the end point
        data.push(pt.x, pt.y);
        g.drawPath(data, {x:-Rpitch, y:0, strokeColor:'magenta'});
      };

      this.drawBezInvolute();
      this.drawRealInvolute();
    }

    function initGear(opts)
    {
      // create the required contents of next state vector (the default for others are OK)
      this.nextState.x = opts.cx;
      this.nextState.y = opts.cy;
    }

    function GearAnimation(g, module, gearTeeth, pinionTeeth, pressureAngle)
    {
      'use strict';
      // =============== DIN GEAR DESIGN ===================
      var m = module,               // Module = mm of pitch diameter per tooth
          Zp = pinionTeeth,
          Zg = gearTeeth,
          gr = Zg/Zp,               // gear ratio
          phi = pressureAngle || 20,
          Rg = Zg*m/2,              // gear Pitch Radius
          Rp = Zp*m/2,              // pinion Pitch Radius
          bklsh = 0.04*m,           // backlash (mm)
          dC = bklsh/(2*Math.tan(Math.PI*phi/180)), // centre shift to make backlash
          data, newTooth,
          Dsg, gearTooth, gear,
          Dsp, pinionTooth, pinion,
          shaft,
          org, cx, cy,
          xmin = -50,
          ymin = -30,
          xspan = 100,
          i,
          gearConfig, pinionConfig,
          twnr;

      g.setGridboxRHC();
      g.setWorldCoords(xmin, ymin, xspan);

      // generate gear
      data = createGearTooth(m, Zg, phi);
      gearTooth = new Shape(data, {
        fillColor:"#ddd0dd",
        border: true,
        strokeColor: "#606060" });
      gearTooth.rotate(180/Zg);     // rotate gear 1/2 tooth to mesh
      gear = gearTooth.dup();
      for (i=1; i&lt;Zg; i++)
      {
        newTooth = gearTooth.dup();
        newTooth.rotate(360*i/Zg);
        gear.appendPath(newTooth, true);  // trim move command = true
      }
      // add axle hole
      Dsg = 0.6*Rg;             // diameter of gear shaft
      shaft = new Path(shapeDefs.circle(Dsg));
      shaft.revWinding();
      gear.appendPath(shaft);       // retain the 'moveTo' command for shaft sub path

      // generate pinion
      data = createGearTooth(m, Zp, phi);
      pinionTooth = new Shape(data, {
        fillColor:"#d0d0e8",
        border: true,
        strokeColor: "#606060" });
      pinionTooth.rotate(-(180/Math.PI)*0.5*bklsh/Rp);  // rotate gear to take up backlash
      pinion = pinionTooth.dup();
      for (i=1; i&lt;Zp; i++)
      {
        newTooth = pinionTooth.dup();
        newTooth.rotate(360*i/Zp);
        pinion.appendPath(newTooth, true);  // trim 'moveto' command = true
      }
      // add axle hole
      Dsp = 0.6*Rp;             // diameter of pinion shaft
      shaft = new Path(shapeDefs.circle(Dsp));
      shaft.revWinding();
      pinion.appendPath(shaft);     // retain the 'moveTo' command for shaft sub path

      // setup the animation
      gearConfig = {cx:-Rg, cy:0, degs:[0, 360]};
      pinionConfig = {cx:Rp+dC, cy:0, degs:[0, -gr*360]};  // gr*0.666 rpm
			twnr = new Tweener(0, 90000, "loop");               // 0.666 rpm

      function initGear(opts)
      {
        // create the required contents of next state vector (the default for others are OK)
        this.nextState.x = opts.cx;
        this.nextState.y = opts.cy;
      }

      function gearPath(time, opts)
      {
        var rotVal = twnr.getVal(time, opts.degs);
        // create the required contents of next state vector (the default for others are OK)
        this.nextState.degs = rotVal;
      }

      g.animate(gear, initGear, null, gearPath, gearConfig);
      g.animate(pinion, initGear, null, gearPath, pinionConfig);

      this.run = function()
      {
        g.playAnimation();
      };

      this.halt = function()
      {
        g.pauseAnimation();
      };

      g.playAnimation();
    }

    function IntGearAnimation(g, module, gearTeeth, pinionTeeth, pressureAngle)
    {
      'use strict';
      // ==================== DIN GEAR DESIGN ====================
      var m = module,           // Module = teeth per inch of diamter
          Zp = pinionTeeth,
          Zg = gearTeeth,
          gr = Zg/Zp,           // gear teeth
          phi = pressureAngle || 20,
          Rg = Zg*m/2,          // gear Pitch radius
          Rp = Zp*m/2,          // pinion Pitch radius
          Rrim = Rg+2.75*m,     // ring gear outer radius
          bklsh = 0.04*m,       // backlash
          dC = bklsh/(2*Math.tan(Math.PI*phi/180)), // centre shift to make backlash
          data, newTooth,
          gear, gearTooth, teeth,
          pinion, pinionTooth,
          Rshaft, shaft,
          org, cx, cy,
          xmin = -250,
          ymin = -125,
          xspan = 400,
          i,
          gearConfig, pinionConfig,
          twnr;

      g.setGridboxRHC();              // full canvas
      g.setWorldCoords(xmin, ymin, xspan);

      // create ring gear outer rim
      gear = new Shape(shapeDefs.circle(2*Rrim), {
        fillColor:"#ddddd0",
        border: true,
        strokeColor: "#606060" });
      gear.revWinding();   // reverse winding so hole center hole won't be filled
      // now generate ring gear teeth
      data = createIntGearTooth(m, Zg, phi);
      gearTooth = new Path(data);
      gearTooth.rotate(180/Zg);  // rotate gear 1/2 tooth to mesh
      teeth = gearTooth.dup();
      for (i=1, newTooth; i&lt;Zg; i++)
      {
        newTooth = gearTooth.dup();
        newTooth.rotate(360*i/Zg);
        teeth.appendPath(newTooth, true); // trim initial 'moveTo'
      }
      gear.appendPath(teeth);   // retain the moveTo to make sub-path
      // generate pinion
      data = createGearTooth(m, Zp, phi);
      pinionTooth = new Shape(data, {
        fillColor:"#d0dddd",
        border: true,
        strokeColor: "#606060" });
      pinionTooth.rotate((180/Math.PI)*0.5*bklsh/Rp);  // rotate gear close backlash
      pinion = pinionTooth.dup();
      for (i=1; i&lt;Zp; i++)
      {
        newTooth = pinionTooth.dup();
        newTooth.rotate(360*i/Zp);
        pinion.appendPath(newTooth, true);  // trim move command = true
      }
      // add axle shaft hole
      Rshaft = 0.3*Rp;      // shaft radius
      shaft = new Path(shapeDefs.circle(2*Rshaft));
      shaft.revWinding();       // reverse the winding so hole not filled
      pinion.appendPath(shaft); // retain the moveTo to make sub-path

      // setup the animation
      gearConfig = {cx:-Rg, cy:0, degs:[0, 360]};
      pinionConfig = {cx:-Rp-dC, cy:0, degs:[0, gr*360]};    // gr*1 rpm
			twnr = new Tweener(0, 60000, "loop");                 // 1 rpm

      function initGear(opts)
      {
        // create the required contents of next state vector (the default for others are OK)
        this.nextState.x = opts.cx;
        this.nextState.y = opts.cy;
      }

      function gearPath(time, opts)
      {
        var rotVal = twnr.getVal(time, opts.degs);
        // create the required contents of next state vector (the default for others are OK)
        this.nextState.degs = rotVal;
      }

      g.animate(gear, initGear, null, gearPath, gearConfig);
      g.animate(pinion, initGear, null, gearPath, pinionConfig);

      this.run = function()
      {
        g.playAnimation();
      };

      this.halt = function()
      {
        g.pauseAnimation();
      };

      g.playAnimation();
    }

//============================================================
    var invDiagram, involuteDemo1, involuteDemo2, gearDemo, intGearDemo;

    function init()
    {
      var g1, g2, g3, g4;

      invDiagram = new InvoluteDefined('cvs0', 5, 20, 20);
      InvoluteDefined2('cvsA', 10, 8, 20);

      g1 = new Cango('cvs1');
      involuteDemo1 = new InvoluteOrderN(g1, 3, 17, 25, 3);
      initZoomPan(g1.createLayer(), g1, function(){involuteDemo1.drawBezInvolute(); involuteDemo1.drawRealInvolute();});

      g2 = new Cango('cvs2');
      involuteDemo2 = new InvoluteProfile(g2, 3, 17, 25);
      initZoomPan(g2.createLayer(), g2, function(){involuteDemo2.drawCubicBezInvolute(); involuteDemo2.drawRealInvolute();});

      g3 = new Cango('cvs3');
      gearDemo = new GearAnimation(g3, 5, 52, 24);
      initZoomPan(g3.createLayer(), g3, function(){g3.redrawAnimation;});

      g4 = new Cango('cvs4');
      intGearDemo = new IntGearAnimation(g4, 5, 42, 22, 20);
      initZoomPan(g4.createLayer(), g4, function(){g4.redrawAnimation;});
    }

    function showConstruction()
    {
      invDiagram.showConst = !invDiagram.showConst;
      invDiagram.drawInv();
      return false;
    }

    var consoleBtns3 =
    {
      f1:function(){gearDemo.run()},
      f2:function(){gearDemo.halt()}
    };

    var consoleBtns4 =
    {
      f1:function(){intGearDemo.run()},
      f2:function(){intGearDemo.halt()}
    };
  &lt;/script&gt;</t>
<t tx="leo.20170510181722.6">/*=====================================================================
  Filename: CangoAnimation-5v00.js
  Rev 5
  By: A.R.Collins
  Description:  This file augments the core Cango object with
                animation methods
  License: Released into the public domain
  latest version at
  &lt;http://www/arc.id.au/&gt;

  Date    Description                                             |By
  --------------------------------------------------------------------
  11May14 First release                                            ARC
  21Jul14 Updated to Cango-5 _buf becomes this.cnvs.buf            ARC
  24Jul14 Enable synchronised timeline for all layers
          Released as Version 2                                    ARC
  14Nov15 Dropped non-functional references to duration=0
          Rename Timeline to CgoTimeline to avoid conflicts        ARC
  16Nov15 Allow any path function, not just interpolate            ARC
  17Nov15 Add standard interpolateKeyFrames path function          ARC
          Let Timeline handle saving draw time as currState.time   ARC
  20Nov15 Support calling clipPath in pathFn (requires Cango7v16)  ARC
  22Nov15 rename 'interpolateKeyFrmaes' to 'interpolate',
          use x,y,scl,rot not xKeyFrames etc.
          Call render(obj, nextState) immediatley after initFn
          Make currState clone of nextState after initFn called    ARC
  23Nov15 Add support for ketTimes in interpolate
          Added optional start offset from paused                  ARC
  24Nov15 Change mode to STOPPED after duration time (not pause)   ARC
  28Nov15 Add resetClip after render in Animation instantiation
          ctx.save before pathFn call and ctx.restore after render ARC
  01Dec15 Released as 3v00 (based on 3beta-19)                     ARC
  17Dec15 bugfix: resume from stop didn't set currState.time=0.
          deleteAnimation forces timeline to paused mode           ARC
  21Jan16 bugfix: resetClip called after buffer switch             ARC
  02Feb16 Add Tweener utility, drop interpolate
          Release as Version 4  (based on 4beta-01)                ARC
  13Feb16 Define animation keyTimes in percentage of duration      ARC
  12Mar17 Update to use Cango Ver 9
          Don't assume nextState properties except time            ARC
  25Mar17 Add drawFn to Animation parameters to match Timeline     ARC
  26Mar17 bugfix: restore ctx after render                         ARC
  30Mar17 Released as CangoAnimation-5v00                          ARC
 =====================================================================*/

var CgoTimeline, Tweener;

Cango = (function(CangoCore)  // Cango must be declared a global before this file is loaded
{
  "use strict";

  if (!Date.now)
  {
    Date.now = function now()
    {
      return new Date().getTime();
    };
  }

  var isArray = function(obj)
  {
    return Object.prototype.toString.call(obj) === '[object Array]';
  };

  var isNumber = function(o)
  {
    return !isNaN(o) &amp;&amp; o !== null &amp;&amp; o !== "" &amp;&amp; o !== false;
  };

  Tweener = function(delay, duration, loopStr)    // a pre-defined pathFn
  {
		this.delay = delay || 0;
    this.dur = duration || 5000;
    this.reStartOfs = 0;
    this.loop = false;
    this.loopAll = false;

    var savThis = this,
        loopParm = "noloop";

    if (typeof loopStr === 'string')
    {
      loopParm = loopStr.toLowerCase();
    }
    if (loopParm === 'loop')
    {
      this.loop = true;
    }
    else if (loopParm === 'loopall')
    {
      this.loopAll = true;
    }

    this.getVal = function(time, vals, keyTimes)  // vals is an array of key frame values (or a static number)
    {
      var numSlabs, slabDur, slab, frac, i,
					t = 0,
					tFrac,
					localTime,
					values, times;

      if (time === 0)       // re-starting after a stop, otherwise this can increase forever (looping is handled here)
      {
        savThis.reStartOfs = 0;     // reset this to prevent negative times
      }
      localTime = time - savThis.reStartOfs;       // handles local looping
      if ((localTime &gt; savThis.dur+savThis.delay) &amp;&amp; (savThis.dur &gt; 0) &amp;&amp; (savThis.loop || savThis.loopAll))
      {
        savThis.reStartOfs = savThis.loop? time - savThis.delay : time;      // we will correct external time to re-start
        localTime = 0;          // force re-start at frame 0 now too
      }
      t = 0;    // t is the actual local time value used for interpolating
      if (localTime &gt; savThis.delay)    // repeat initial frame (t=0) if there is a delay to start
      {
        t = localTime - savThis.delay;   // localTime is contrained to 0 &lt; localTime &lt; this.dur
      }

      if (!isArray(vals))    // not an array, just a static value, return it every time
      {
        return vals;
      }
      if (!vals.length)
      {
        return 0;
      }
      if (vals.length === 1)
      {
        return vals[0];
      }
      // we have at least 2 element array of values
      if (t === 0)
      {
        return vals[0];
      }
      if (t &gt;= savThis.dur)
      {
        return vals[vals.length-1];  // freeze at end value
      }
      numSlabs = vals.length-1;
      if (!isArray(keyTimes) || (vals.length !== keyTimes.length))
      {
        slabDur = savThis.dur/numSlabs;
        slab = Math.floor(t/slabDur);
        frac = (t - slab*slabDur)/slabDur;

        return vals[slab] + frac*(vals[slab+1] - vals[slab]);
      }

      // we have keyTimes to play work with copies of arrays
      values = [].concat(vals);
      times = [].concat(keyTimes);
      // make sure times start with 0
      if (times[0] !== 0)
      {
        values.unshift(values[0]);
        times.unshift(0);
      }
      // make sure times end with 100
      if (times[times.length-1] !== 100)
      {
        values.push(values[values.length-1]);
        times.push(100);
      }
      i = 0;
      tFrac = t/savThis.dur;
      while ((i &lt; times.length-1) &amp;&amp; (times[i+1]/100 &lt; tFrac))
      {
        i++;
      }
      slabDur = (times[i+1]-times[i])/100;
      frac = (tFrac - times[i]/100)/slabDur;    // convert percentage time to fraction

      return values[i] + frac*(values[i+1] - values[i]);
    };
  };

  function Animation(id, gc, obj, initFn, drawFn, pathFn, options)
  {
    var prop;

    this.id = id;
    this.gc = gc;        // the Cango context to do the drawing
    this.obj = obj;
    this.drawFn = drawFn;
    this.pathFn = pathFn;    // root object (Obj2D or Group2D) of scene to be draw
    this.options = options;
    this.currState = {time:0};
    this.nextState = {time:0};
    this.gc.ctx.save();
    if (typeof initFn === "function")
    {
      initFn.call(this, options);  // call object creation code
    }
    // draw the object as setup by initFn (pathFn not called yet)
    if (typeof this.drawFn === "function")
    {
      this.drawFn.call(this, this.obj, this.nextState, options);   // call user custom function
    }
    else
    {
      this.gc.render(this.obj, this.nextState);     // call default draw function
    }
    this.gc.resetClip();    // if init calls clipPath, it must be reset so next frame doesn't combine clip areas
    this.gc.ctx.restore();  // if initFn makes changes to ctx restore to pre-initFn state
    // now it has been drawn save the currState values (nextState values are generated by pathFn)
    for (prop in this.nextState)   // if initFn creates new properties, make currState match
    {
      if (this.nextState.hasOwnProperty(prop))
      {
        this.currState[prop] = this.nextState[prop];
      }
    }
  }

  // this is the actual animator that draws the frame
  function drawFrame(timeline)
  {
    var temp, i, at,
        prevAt = null,
        localTime,
        time = Date.now();    // use this as a time stamp, browser don't all pass the same time code

    if (timeline.prevAnimMode === timeline.modes.STOPPED)
    {
      timeline.startTime = time - timeline.startOfs;    // forces localTime = 0, start from beginning
    }
    localTime =  time - timeline.startTime;

    // step through all the animation tasks
    for (i=0; i&lt;timeline.animTasks.length; i++)
    {
      at = timeline.animTasks[i];
      if (at.gc.cId !== prevAt)
      {
        // check for new layer, only clear a layer once, there maybe several Cango contexts on each canvas
        at.gc.clearCanvas();
        prevAt = at.gc.cId;
      }
      at.gc.ctx.save();
      // if re-starting after a stopAnimation reset the currState.time so pathFn doesn't get negative time between frames
      if (timeline.prevAnimMode === timeline.modes.STOPPED)
      {
        at.currState.time = 0;    // avoid -ve dT (=localTime-currState.time) in pathFn
      }
      if (typeof(at.pathFn) === 'function')  // static objects may have null or undefined
      {
        at.pathFn.call(at, localTime, at.options);
      }
      if (typeof at.drawFn === "function")
      {
        at.drawFn.call(at, at.obj, at.nextState, at.options);  // call user custom function
      }
      else
      {
        at.gc.render(at.obj, at.nextState);     // default draw function
      }
      at.gc.ctx.restore(); // if pathFn changes any ctx properties restore to pre pathFn state
      // now swap the currState and nextState vectors (pathFn may use currState to gen nextState)
      temp = at.currState;
      at.currState = at.nextState; // save current state vector, pathFn will use it
      at.nextState = temp;
      // save the draw time for pathFn
      at.currState.time = localTime;
    }
    timeline.currTime = localTime;      // timestamp of what is currently on screen
  }

  CgoTimeline = function()
  {
    this.animTasks = [];    // each layer can push an Animation object in here
    this.timer = null;                // need to save the rAF id for cancelling
    this.modes = {PAUSED:1, STOPPED:2, PLAYING:3, STEPPING:4};     // animation modes
    this.animMode = this.modes.STOPPED;
    this.prevAnimMode = this.modes.STOPPED;
    this.startTime = 0;               // Date.now when localTime was 0 used to generate localTime
    this.startOfs = 0;                // used if play calls with non-zero start time
    this.currTime = 0;                // time along timeline (starting at 0) of frame on screen
    this.stepTime = 50;               // animation step time interval (in msec)
  };

  CgoTimeline.prototype.stopAnimation = function()
  {
    window.cancelAnimationFrame(this.timer);
    this.prevAnimMode = this.animMode;
    this.animMode = this.modes.STOPPED;
    // reset the currTime so play and step know to start again
    this.currTime = 0;
    this.startOfs = 0;
  };

  CgoTimeline.prototype.pauseAnimation = function()
  {
    window.cancelAnimationFrame(this.timer);
    this.prevAnimMode = this.animMode;
    this.animMode = this.modes.PAUSED;
  };

  CgoTimeline.prototype.stepAnimation = function()
  {
    var savThis = this;

    // this is the actual animator that draws the frame
    function drawIt()
    {
      drawFrame(savThis);
      savThis.prevAnimMode = savThis.modes.PAUSED;
      savThis.animMode = savThis.modes.PAUSED;
    }

    // eqivalent to play for one frame and pause
    if (this.animMode === this.modes.PLAYING)
    {
      return;
    }
    if (this.animMode === this.modes.PAUSED)
    {
      this.startTime = Date.now() - this.currTime;  // move time as if currFrame just drawn
    }
    this.prevAnimMode = this.animMode;
    this.animMode = this.modes.STEPPING;

    setTimeout(drawIt, this.stepTime);
  };

  CgoTimeline.prototype.redrawAnimation = function()
  {
    // eqivalent to play for one frame and pause
    if (this.animMode === this.modes.PLAYING)
    {
      return;
    }
    this.startTime = Date.now() - this.currTime;  // move time as if currFrame just drawn

    drawFrame(this);
  };

  CgoTimeline.prototype.playAnimation = function(startOfs, stopOfs)
  {
    var savThis = this;

    function drawIt()
    {
      drawFrame(savThis);
      savThis.prevAnimMode = savThis.modes.PLAYING;
      if (stopOfs)
      {
        if (savThis.currTime &lt; stopOfs)
        {
          savThis.timer = window.requestAnimationFrame(drawIt);
        }
        else
        {
          savThis.stopAnimation();     // go back to start of time line
        }
      }
      else
      {
        savThis.timer = window.requestAnimationFrame(drawIt);   // go forever
      }
    }

    this.startOfs = startOfs || 0;
    if (this.animMode === this.modes.PLAYING)
    {
      return;
    }
    if (this.animMode === this.modes.PAUSED)
    {
      this.startTime = Date.now() - this.currTime;  // move time as if currFrame just drawn
    }
    this.prevAnimMode = this.animMode;
    this.animMode = this.modes.PLAYING;

    this.timer = window.requestAnimationFrame(drawIt);
  };

//===============================================================================

  CangoCore.prototype.animate = function(obj, init, draw, path, options)
  {
    var animObj,
        animId;

    animId = this.cId+"_"+this.getUnique();
    animObj = new Animation(animId, this, obj, init, draw, path, options);
    // push this into the Cango animations array
    this.stopAnimation();   // make sure we are not still running and old animation
    this.bkgCanvas.timeline.animTasks.push(animObj);

    return animObj.id;   // so the animation just created can be deleted if required
  };

  CangoCore.prototype.pauseAnimation = function()
  {
    this.bkgCanvas.timeline.pauseAnimation();
  };

  CangoCore.prototype.playAnimation = function(startTime, stopTime)
  {
    this.bkgCanvas.timeline.playAnimation(startTime, stopTime);
  };

  CangoCore.prototype.stepAnimation = function()
  {
    this.bkgCanvas.timeline.stepAnimation();
  };

  CangoCore.prototype.stopAnimation = function()
  {
    this.bkgCanvas.timeline.stopAnimation();
  };

  CangoCore.prototype.redrawAnimation = function()
  {
    this.bkgCanvas.timeline.redrawAnimation();
  };

  CangoCore.prototype.deleteAnimation = function(animId)
  {
    var idx = -1,
        i;

    this.pauseAnimation();   // pause all animations
    for (i=0; i&lt;this.bkgCanvas.timeline.animTasks.length; i++)
    {
      if (this.bkgCanvas.timeline.animTasks[i].id === animId)
      {
        idx = i;
        break;
      }
    }
    if (idx === -1)
    {
      // not found
      return;
    }
    this.bkgCanvas.timeline.animTasks.splice(idx,1);       // delete the animation object
  };

  CangoCore.prototype.deleteAllAnimations = function()
  {
    this.stopAnimation();
    this.bkgCanvas.timeline.animTasks = [];
  };

  return CangoCore;    // return the augmented Cango object, over-writing the existing

}(Cango));     // Take the existing Cango object and add animation methods
</t>
<t tx="leo.20170610095926.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170610095926.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610095926.3">#第十一週上課筆記

##利用漸開線原理, 以 Brython 繪製單一正齒輪廓及齒輪組


</t>
<t tx="leo.20170610100054.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610100054.2">####利用漸開線原理, 以 Brython 繪製單一正齒輪廓

&lt;img src="data/w11/spur_gear.png" width="600" /&gt;
</t>
<t tx="leo.20170610100515.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610100515.2">####利用漸開線原理, 以 cango繪製單一正齒輪廓

&lt;img src="data/w11/cango_spur gear.png" width="600" /&gt;
</t>
<t tx="leo.20170610100539.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610100539.2">####利用漸開線原理, 以 Brython 繪製齒輪組

&lt;img src="data/w11/spur_gears.png" width="600" /&gt;
</t>
<t tx="leo.20170610101128.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610101128.2">##注意事項

###1.當齒根半徑因為齒數增多後大於基圓半徑時, 漸開線從齒根圓長起

###2.當基圓半徑大於齒根圓時, 漸開線從基圓長起

</t>
<t tx="leo.20170610101945.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610101945.2">###注意事項

####1.第1齒輪順時鐘轉 90 度

####2.將第2齒輪逆時鐘轉 90 度之後, 再多轉一齒, 以便與第1齒輪進行囓合

####3.將第3齒輪逆時鐘轉 90 度之後, 再往回轉第2齒輪定位帶動轉角, 然後再逆時鐘多轉一齒, 以便與第2齒輪進行囓合

</t>
<t tx="leo.20170610102332.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170610102332.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610102332.3">#第十二週上課筆記

##在Onshape上繪製漸開線齒輪以及利用參數繪製齒輪


</t>
<t tx="leo.20170610102611.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610102611.2">####給定模數、齒數及壓力角後，繪製出節圓、齒頂圓、齒根圓及基圓

&lt;img src="data/W12/image W12/onshape_round.png" width="600" /&gt;


</t>
<t tx="leo.20170610102727.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610102727.2">####接著從基圓上拉出漸開線，接著繪製到齒根的垂直線，並對稱草圖，即可擠出齒型

&lt;img src="data/W12/image W12/onshape_spur.png" width="600" /&gt;


</t>
<t tx="leo.20170610102904.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610102904.2">&lt;iframe src="https://player.vimeo.com/video/218259602" width="640" height="413" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/218259602"&gt;40423245機械設計工程系 - 協同產品設計實習課程W12-在Onshape上繪製漸開線齒輪&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;



</t>
<t tx="leo.20170610102906.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610102906.2">&lt;iframe src="https://player.vimeo.com/video/218260068" width="640" height="413" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/218260068"&gt;40423245機械設計工程系 - 協同產品設計實習課程W12-利用參數繪製齒輪&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;



</t>
<t tx="leo.20170610103339.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170610103339.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610103339.11">&lt;iframe src="https://player.vimeo.com/video/218462899" width="640" height="454" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/218462899"&gt;40423245機械設計工程系 - 協同產品設計實習課程W13-在Onshape上組立行走機構&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;



</t>
<t tx="leo.20170610103339.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610103339.3">#第十三週上課筆記

##在Onshape中繪製行走機構所需零件，並組立各個零件


</t>
<t tx="leo.20170610103339.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610103339.5">####先在Part Studio中設定好下列參數

&lt;img src="data/W13/Onshape_Variable.png" width="300" /&gt;


</t>
<t tx="leo.20170610103339.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610103339.7">####接著繪製各零件草圖並導入參數

 &lt;img src="data/W13/Onshape_Sketch1.png" width="650 " /&gt;


</t>
<t tx="leo.20170610103339.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610103339.9">&lt;iframe src="https://player.vimeo.com/video/218461979" width="640" height="454" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/218461979"&gt;40423245機械設計工程系 - 協同產品設計實習課程W13-利用Onshape繪製行走機構所需零件&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;



</t>
<t tx="leo.20170610103509.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610103509.2">####設定擠出參數為 3，並將零件擠出

 &lt;img src="data/W13/Onshape_Extrude1.png" width="650 " /&gt;


</t>
<t tx="leo.20170610103535.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610103535.2">#### 接著設定軸的半徑參數為 2 並繪製草圖，接著擠出軸，尺寸分別為 厚度X2、厚度X3、厚度X6及厚度X15
 
  &lt;img src="data/W13/Onshape_shaft_Extrude.png" width="650 " /&gt;

</t>
<t tx="leo.20170610103600.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610103600.2">####   製作動畫時只能使兩隻腳同時作動，假如要使四隻腳同時作動，可使用群組指令將兩邊的作動軸設為一個群組

</t>
<t tx="leo.20170610103617.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610103617.2">##零件連結 ：&lt;a href="https://cad.onshape.com/documents/99bea89428b15b1fd764f653/w/9126b8533964a3c22b3305dd/e/adbf4d9ca662915e3c139315"&gt;Strandbeest&lt;/a&gt;

</t>
<t tx="leo.20170610103710.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610103710.2">&lt;iframe src="https://player.vimeo.com/video/218468376" width="640" height="454" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/218468376"&gt;40423245機械設計工程系 - 協同產品設計實習課程W13-在Onshape上模擬行走機構動畫&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;



</t>
<t tx="leo.20170610104037.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170610104037.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104037.11">#### 選擇安裝過程的語言，選擇『English』，接著選『United States』

&lt;img src="data/W14/Linux United States.png" width="700" /&gt;

</t>
<t tx="leo.20170610104037.12">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104037.13">####接著會偵測鍵盤排列方式，選『No』，接著選擇鍵盤的配置，也都是選擇『English』

&lt;img src="data/W14/Linux Detect keyborad.png" width="700" /&gt;

</t>
<t tx="leo.20170610104037.14">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104037.15">####接著設定系統的主機名稱

&lt;img src="data/W14/Linux Hostname.png" width="700" /&gt;

</t>
<t tx="leo.20170610104037.16">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104037.17">&lt;iframe src="https://player.vimeo.com/video/219270004" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/219270004"&gt;40423245機械設計工程系 - 協同產品設計實習課程W14-利用虛擬主機架設Ubuntu Server 16.04.2&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;



</t>
<t tx="leo.20170610104037.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104037.3">#第十四週上課筆記

##利用虛擬主機架設Ubuntu Server 16.04.2


</t>
<t tx="leo.20170610104037.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104037.5">##由於沒有實體電腦，因此選擇虛擬主機來練習


</t>
<t tx="leo.20170610104037.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104037.7">####啟動掛載好Ubuntu Server後，即可啟動虛擬電腦，一開始會選擇語言，選擇『English』

&lt;img src="data/W14/Linux Language.png" width="700" /&gt;


</t>
<t tx="leo.20170610104037.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104037.9">####開始安裝，選擇『Install Ubuntu Server』

&lt;img src="data/W14/Install Ununtu Server.png" width="700" /&gt;


</t>
<t tx="leo.20170610104334.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104334.2">####接著設定使用者完整名稱

&lt;img src="data/W14/Linux username.png" width="700" /&gt;

</t>
<t tx="leo.20170610104356.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104356.2">####設定使用者帳號

&lt;img src="data/W14/Linux username account.png" width="700" /&gt;
</t>
<t tx="leo.20170610104416.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104416.2">####設定使用者密碼

&lt;img src="data/W14/Linux username password.png" width="700" /&gt;
</t>
<t tx="leo.20170610104434.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104434.2">####設置完後系統會問你密碼要設置得如此簡單嗎，選擇『Yes』

&lt;img src="data/W14/Linux weak password.png" width="700" /&gt;
</t>
<t tx="leo.20170610104458.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104458.2">####確認時區『Asia / Taipei』是否正確

&lt;img src="data/W14/Linux time zone.png" width="700" /&gt;
</t>
<t tx="leo.20170610104519.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104519.2">####選擇『Guided - use entire disk and set up LVM

&lt;img src="data/W14/Linux enyire disk.png" width="700" /&gt;

</t>
<t tx="leo.20170610104542.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104542.2">####選擇磁碟

&lt;img src="data/W14/Linux Select disk.png" width="700" /&gt;

</t>
<t tx="leo.20170610104622.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104622.2">####是否寫入變更到磁碟，選擇『Yes』

&lt;img src="data/W14/Linux configure LVM.png" width="700" /&gt;

</t>
<t tx="leo.20170610104648.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104648.2">####設定分割區的空間容量

&lt;img src="data/W14/Linux Partition disk.png" width="700" /&gt;

</t>
<t tx="leo.20170610104720.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610104720.2">####確認磁碟配置無誤，選擇『Yes』

&lt;img src="data/W14/Linux 確認磁碟配置.png" width="700" /&gt;

</t>
<t tx="leo.20170610105006.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610105006.2">####設定 HTTP proxy，這裡不填寫

&lt;img src="data/W14/Linux HTTP proxy.png" width="700" /&gt;


</t>
<t tx="leo.20170610105027.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610105027.2">####是否自動更新系統，選擇『No automatic updates』

&lt;img src="data/W14/Linux no updates.png" width="700" /&gt;

</t>
<t tx="leo.20170610105050.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610105050.2">####是否要安裝其他軟體，選擇『OpenSSH server』;接著安裝 GRUB 開機選單

&lt;img src="data/W14/Linux GRUB boot.png" width="700" /&gt;

</t>
<t tx="leo.20170610105130.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610105130.2">####接著選擇不加密，安裝即完畢，電腦會退出光碟，接著即可登入server

&lt;img src="data/W14/Linux  finish.png" width="700" /&gt;

</t>
<t tx="leo.20170610110041.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170610110041.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610110041.11">&lt;img src="data/W15/self_spur_gear.png" width="700" /&gt;

</t>
<t tx="leo.20170610110041.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610110041.3">#第十五週上課筆記

###利用brython繪製正齒輪以及半尺型的正齒輪，接著利用submodule繪製齒輪組，並在Onshape中繪製再一遍齒輪組，並將過程紀錄。


</t>
<t tx="leo.20170610110041.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610110041.44">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610110041.45">&lt;iframe src="https://player.vimeo.com/video/220192683" width="640" height="454" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/220192683"&gt;40423245機械設計工程系 - 協同產品設計實習課程W15練習-在 網誌完成齒輪組的囓合協同繪圖&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;



</t>
<t tx="leo.20170610110041.5">##1. 請以 W15 練習為網誌標題, 800x600 為畫布大小, 在畫布正中央畫一個半徑為 250 畫素, 壓力角 20, 齒數為 36 齒的漸開線正齒輪輪廓.

</t>
<t tx="leo.20170610110041.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610110041.7">&lt;img src="data/W15/spur_gear.png" width="700" /&gt;


</t>
<t tx="leo.20170610110041.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610110041.9">####2. 完成後, 請在正齒輪中央寫上自己的學號, 並建立第二個 800x600 的畫布, 請畫出只有上半齒形的漸開線正齒輪輪廓 , 且該齒輪廓下方水平線, 連接兩端齒根圓點交的直線以紅色繪製, 且在齒輪下方以藍色字元寫上自己的學號.
</t>
<t tx="leo.20170610110818.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610110818.2">####3. 請各學員在各自 github 倉儲中的 data/py 目錄中, 編寫一個可以採圓心座標, 節圓半徑, 齒數, 壓力角與定位角度作為輸入的齒輪程式函式, 交由組長從各組員的 submodule 設定中呼叫導入, 以便在各分組的網頁中完成一個畫出所有組員協同繪圖的齒輪減速組圖, 且各齒輪正中心必須寫上組員學號, 各組按照學號大小排序, 分別由最右邊齒數 16 齒開始囓合, 依序增加 2 齒, 當排至平面四齒囓合後, 第五位組員則以垂直方向向下囓合兩個齒輪後, 轉由右至左水平排列, 直至所有組員均各提供一個協同囓合用的齒輪為止.

</t>
<t tx="leo.20170610110820.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610110820.2">&lt;img src="data/W15/spur_gears.png" width="700" /&gt;

</t>
<t tx="leo.20170610111030.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610111030.2">##4. 請依照上述規劃, 在 Onshape 完成相同齒輪組的囓合協同繪圖.

##齒輪組連結：&lt;a href="https://cad.onshape.com/documents/998bf3dc53b731d62db8fb27/w/aec61dc14ccd5605bc5b5707/e/48c83701832f463be35a0c66"&gt;齒輪組&lt;/a&gt;
</t>
<t tx="leo.20170610111128.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610111128.2">&lt;iframe src="https://player.vimeo.com/video/220192358" width="640" height="413" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/220192358"&gt;40423245機械設計工程系 - 協同產品設計實習課程W15練習-在 Onshape 完成相同齒輪組的囓合協同繪圖&lt;/a&gt; from &lt;a href="https://vimeo.com/user47996237"&gt;40423245&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;



</t>
<t tx="leo.20170610112950.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170610112950.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610112950.3">#第十六週上課筆記

##練習如何遠端連結Fossil伺服器

</t>
<t tx="leo.20170610112950.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170610112950.5">##老師第一節課介紹如何利用Xming連結Fossil伺服器

##第二節讓我們去聆聽學長們的專題報告

##第三四節的報告延至下週
</t>
<t tx="leo.20170621082850.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170621082850.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170621082850.3">#第十八週上課筆記



</t>
<t tx="leo.20170621083037.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170621083037.2">&lt;a href="https://40423222.github.io/2017springcd_bg7/blog/%E6%9C%9F%E6%9C%AB%E8%A8%88%E7%95%AB-%E8%A1%8C%E8%B5%B0%E6%A9%9F%E6%A7%8B.html"&gt;行走機構網誌&lt;/a&gt;



</t>
<t tx="leo.20170621083909.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170621083909.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170621083909.3">#第十七週上課筆記

##期末協同查驗與自評

</t>
<t tx="leo.20170621084055.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170621084055.2">&lt;iframe src="data/W17/ass.html" width="800" height="600"&gt;&lt;/iframe&gt;


</t>
<t tx="leo.20170621094157.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170621094157.2">&lt;img src="data/W17/twobar.png" width="700" /&gt;
</t>
<t tx="leo.20170621095346.2"></t>
<t tx="leo.20170621095346.3">(uncached) leo.20170312212027.2
Diff...
- ####接著可利用Stop point 將路徑匯出成csv檔，接著可利用Excel裡的圖表繪製功能驗證軌跡是否相同。
?                               ^
+ ####接著可利用Stop point 將路徑匯出成csv檔 ，接著可利用Excel裡的圖表繪製功能驗證軌跡是否相同。
?                               ^
  
  &lt;img src="data/image W3/Excel trace point.png" width="560" /&gt;
  
</t>
<t tx="leo.20170621095346.4">####接著可利用Stop point 將路徑匯出成csv檔 ，接著可利用Excel裡的圖表繪製功能驗證軌跡是否相同。

&lt;img src="data/image W3/Excel trace point.png" width="560" /&gt;

</t>
<t tx="leo.20170621095346.5">####接著可利用Stop point 將路徑匯出成csv檔，接著可利用Excel裡的圖表繪製功能驗證軌跡是否相同。

&lt;img src="data/image W3/Excel trace point.png" width="560" /&gt;

</t>
<t tx="yen.20170108171605.1"></t>
<t tx="yen.20170108171605.2">QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;'CherryPy', 'pytz', 'mako', 'beautifulsoup4', 'pymysql', 'peewee'
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="yen.20170108171605.3">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="yen.20170108171622.1">2017 Spring CD 機械設計工程系協同產品設計實習

倉儲位置: https://github.com/mdecourse/2017springcd

每一協同成員都應該要在 users 目錄下有一個 Leo 檔案

</t>
<t tx="yen.20170108171733.1"></t>
<t tx="yen.20170108171733.2">@language python
import os
#os.system("pelican content -o output -s local_publishconf.py -t theme/pelican-bootstrap3")
os.system("pelican content -o blog -s local_publishconf.py")
g.es("admin pelican 近端執行完畢")


</t>
<t tx="yen.20170108171733.5"></t>
<t tx="yen.20170108171733.71"></t>
<t tx="yen.20170108171733.81"></t>
<t tx="yen.20170108171733.83">sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout localhost.key -out localhost.crt

</t>
<t tx="yen.20170108171930.1">@language python
import os
import subprocess
import threading
import http.server, ssl

def domake():
    # build directory
    os.chdir("./../")
    server_address = ('localhost', 7443)
    httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print("7443 https server started")
    httpd.serve_forever()

# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</t>
<t tx="yen.20170108171939.1">@language python
import os
import subprocess
import threading
import socket
import http.server, ssl

class HTTPServerV6(http.server.HTTPServer):
    address_family = socket.AF_INET6
  
def domake():
    # build directory
    os.chdir("./../")
    ipv6_address = '2001:288:6004:17:3004::808'
    server_address = (ipv6_address, 6443)
    #httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd = HTTPServerV6(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print("6443 https server started")
    httpd.serve_forever()

# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</t>
<t tx="yen.20170120110024.1">@language xml
@tabwidth -4
@others

</t>
<t tx="yen.20170120110024.2">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
@others
&lt;/html&gt;
</t>
<t tx="yen.20170120110024.3">&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
&lt;title&gt;
2017 Spring 機械設計工程系協同產品設計實習
&lt;/title&gt;
    &lt;meta name="description" content="A framework for easily creating beautiful presentations using HTML"&gt;
    &lt;meta name="author" content="Hakim El Hattab"&gt;
    
    &lt;meta name="apple-mobile-web-app-capable" content="yes"&gt;
    &lt;meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"&gt;
    
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"&gt;
    
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/css/reveal.css"&gt;
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/css/theme/black.css" id="theme"&gt;
    
    &lt;!-- Theme used for syntax highlighting of code --&gt;
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/lib/css/zenburn.css"&gt;

    &lt;!-- Printing and PDF exports --&gt;
    &lt;script&gt;
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = window.location.search.match( /print-pdf/gi ) ? 'https://cad-lab.github.io/cadlab_data/reveal/css/print/pdf.css' : 'https://cad-lab.github.io/cadlab_data/reveal/css/print/paper.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    &lt;/script&gt;

    &lt;!--[if lt IE 9]&gt;
    &lt;script src="https://cad-lab.github.io/cadlab_data/reveal/lib/js/html5shiv.js"&gt;&lt;/script&gt;
    &lt;![endif]--&gt;
&lt;/head&gt;

</t>
<t tx="yen.20170120110024.4">&lt;body&gt;
@others
&lt;script src="https://cad-lab.github.io/cadlab_data/reveal/lib/js/head.min.js"&gt;&lt;/script&gt;
&lt;script src="https://cad-lab.github.io/cadlab_data/reveal/js/reveal.js"&gt;&lt;/script&gt;
&lt;script&gt;
        // More info https://github.com/hakimel/reveal.js#configuration
        Reveal.initialize({
            controls: true,
            progress: true,
            history: true,
            center: true,

            transition: 'slide', // none/fade/slide/convex/concave/zoom

            // More info https://github.com/hakimel/reveal.js#dependencies
            dependencies: [
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/lib/js/classList.js', condition: function() { return !document.body.classList; } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/zoom-js/zoom.js', async: true },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/notes/notes.js', async: true },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/math/math.js', async: true }
            ]
        });
&lt;/script&gt;
&lt;/body&gt;
</t>
<t tx="yen.20170120110024.5">&lt;div class="reveal"&gt;
@others
&lt;/div&gt;

</t>
<t tx="yen.20170120212350.1"></t>
<t tx="yen.20170120212354.1">@language python
import calendar

#calendar.setfirstweekday(calendar.SUNDAY)
# 設每週第1天為星期日
cal = calendar.TextCalendar(calendar.SUNDAY)
# 直接印出文字月曆
#cal.prmonth(2017, 7)

try:
    g.es(cal.formatyear(2017, 2, 1, 1, 3))
except:
    print(cal.formatyear(2017, 2, 1, 1, 3))</t>
<t tx="yen.20170120212520.1">import calendar
import pprint

cal = calendar.Calendar(calendar.SUNDAY)

cal_data = cal.yeardays2calendar(2017, 3)
print('len(cal_data)      :', len(cal_data))

top_months = cal_data[0]
print('len(top_months)    :', len(top_months))

first_month = top_months[0]
print('len(first_month)   :', len(first_month))

print('first_month:')
pprint.pprint(first_month, width=65)</t>
<t tx="yen.20170120232548.1">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
        "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"&gt; 
&lt;head&gt;
&lt;title&gt;Brython - 15-puzzle demo&lt;/title&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;script type="text/javascript"
    src="/src/brython_dist.js"&gt;
&lt;/script&gt;


&lt;style type="text/css" media="screen"&gt;
  body { 
    font: 12px/15px Calibri, Verdana;
    margin: 0px;
    background:#ddd;
    padding: 0px;
  }
#container{
    position: absolute;
    border-width:1px;
    border-radius: 10px;
    border-style: solid;
    border-color: #000;
    background-color: #333;
}
#zone {
    position: absolute;
    background-color:#666;
    color: #fff;
    font-size: 16px;
    line-height:20px;
    padding: 0px;
}
.square{
    position: absolute;
    color: #000; 
    background: #fcfff4; /* old browsers */
    background: linear-gradient(to bottom, #fcfff4 0%,#dfe5d7 40%,#b3bead 100%);
    /* background-color: orange; */
    border-width: 1px;
    border-style: solid;
    border-radius: 5px;
    border-color: #200;
    text-align: center;
}
&lt;/style&gt;

&lt;meta name="viewport" content="width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;"/&gt;
&lt;/head&gt;   
&lt;body onload="brython(1)"&gt;

&lt;script type="text/python"&gt;
from browser import window, document, alert, html
import datetime
import calendar
import locale

w_height = window.innerHeight
w_width = window.innerWidth

locale.setlocale(locale.LC_ALL, '')

today = datetime.date.today()
year, month = today.year, today.month

zone = document["zone"]
c_width = w_width//7
c_height = w_height//6

cal = calendar.Calendar()

month_head = html.DIV('%s %s' %(calendar.month_name[month], year),
    style=dict(left=0, width=7*c_width),
    Class="square"
    )
zone &lt;= month_head

for dnum, day in enumerate(calendar.day_name):
    cell = html.DIV(day, 
        style=dict(left=dnum*c_width, top=20,
                   width=c_width, height=20),
        Class="square")
    zone &lt;= cell

for wnum, week in enumerate(cal.monthdatescalendar(year, month)):
    for dnum, day in enumerate(week):
        cell = html.DIV(day.day, 
            style=dict(left=dnum*c_width, top=40+wnum*c_height,
                       width=c_width, height=c_height,
                       lineHeight='%spx' %c_height),
            Class="square")
        if day.month == month:
            cell.style.color = "#000"
        else:
            cell.style.color = "#999"
        if day == today:
            cell.style.background = "linear-gradient(to bottom, #dcfff4 0%,#bfe5d7 40%,#93bead 100%)"
        zone &lt;= cell
&lt;/script&gt;

&lt;div id="container"&gt;
    &lt;div id="zone"&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</t>
<t tx="yen.20170123204227.1">&lt;style  type="text/css"&gt;
table{
    border: 1px solid black;
    table-layout: fixed;
    width: 100%;
    text-align: center;
}

th, td {
    width: 14%;
    text-align: center;
}
&lt;/style&gt;
&lt;div id="cal1"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document, html
import calendar
import locale

z = html.DIV()
z.style = {"padding": "5px", 
               "backgroundColor": "#ADD8E6",
               "width": "50%"}
cal = calendar.HTMLCalendar(calendar.SUNDAY)
for i in range(1, 5):
    z.html += cal.formatmonth(2017, i)
document["cal1"] &lt;= z
&lt;/script&gt;

&lt;div id="cal2"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document, html
import calendar
import locale

cal2 = document["cal2"]
'''
# default calendar MONDAY is the first day of the week
count = 0
output = "2017 2bCD (三) 08:10-12:00 各週上課日期: "
for month in range(2, 7):
    monthArray = calendar.monthcalendar(2017, month)
    for week in range(len(monthArray)):
        weekArray = monthArray[week]
        # 只需要列出星期三
        if weekArray[2] != 0:
            if month == 2:
                if weekArray[2] &gt; 20:
                    count += 1
                    if count &lt;= 18:
                        output += "W"+str(count)+"-"+ str(month)+ "/" + str(weekArray[2]) + ","
            else:
                count += 1
                if count &lt;= 18:
                    output += "W"+str(count)+"-"+ str(month)+ "/" + str(weekArray[2]) + ","
cal2 &lt;= output
'''

def getClassdate(year=2017, startM=2, startD=20, w=0, note=""):
    # w=0 表示課程排在星期一
    # startM 表示開學月份, startD 表示開學日
    # note 為課程初始告示
    # default calendar MONDAY is the first day of the week
    # 每學期共有 18 週
    totalW = 18
    count = 0
    # output = "2017 Spring 2bCD (三) 08:10-12:00 各週上課日期: "
    output = note + html.BR()
    # 若必須全年搜尋則 7 改為 12, 但是因為只有 18 週, 因此邏輯要修改讓程式較快結束
    for month in range(startM, 7):
        monthArray = calendar.monthcalendar(2017, month)
        for week in range(len(monthArray)):
            weekArray = monthArray[week]
            # 只需要列出星期 (w+1)
            if weekArray[w] != 0:
                if month == startM:
                    if weekArray[startM] &gt; startD:
                        count += 1
                        if count &lt;= totalW:
                            output += "w"+str(count)+"-"+ str(month)+ "/" + str(weekArray[w]) + ", "
                else:
                    count += 1
                    if count &lt;=  totalW:
                        output += "w"+str(count)+"-"+ str(month)+ "/" + str(weekArray[w]) + ", "
    cal2 &lt;= output

# 2b 協同產品設計實習 (三 w=2)
getClassdate(year=2017, startM=2, startD=20, w=2, note="2017 Spring 2bCD (三) 08:10-12:00 各週上課日期: ")
cal2 &lt;= html.BR() + html.BR()
# 2a 協同產品設計實習 (四 w=3)
getClassdate(year=2017, startM=2, startD=20, w=3, note="2017 Spring 2aCD (四) 08:10-12:00 各週上課日期: ")
cal2 &lt;= html.BR() + html.BR()
# 1a 網際內容管理 (五 w=4)
getClassdate(year=2017, startM=2, startD=20, w=4, note="2017 Spring 1aWCM (五) 13:20-16:10 各週上課日期: ")
cal2 &lt;= html.BR() + html.BR()
# VE1a 網際內容管理 (五 w=4)
getClassdate(year=2017, startM=2, startD=20, w=4, note="2017 Spring VE1aCP (五) 18:30-20:00 各週上課日期: ")
cal2 &lt;= html.BR() + html.BR()
&lt;/script&gt;</t>
<t tx="yen.20170124102405.1">from flask import Flask 
from flask_socketio import SocketIO, send

app = Flask(__name__)
app.config['SECRET_KEY'] = 'mysecret'
socketio = SocketIO(app)

@socketio.on('message')
def handleMessage(msg):
	print('Message: ' + msg)
	send(msg, broadcast=True)

if __name__ == '__main__':
	socketio.run(app)</t>
<t tx="yen.20170124102433.1">&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Chat Room&lt;/title&gt;
&lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.8/socket.io.min.js"&gt;&lt;/script&gt;
&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;script type="text/javascript"&gt;
$(document).ready(function() {

	var socket = io.connect('http://127.0.0.1:5000');

	socket.on('connect', function() {
		socket.send('User has connected!');
	});

	socket.on('message', function(msg) {
		$("#messages").append('&lt;li&gt;'+msg+'&lt;/li&gt;');
		console.log('Received message');
	});

	$('#sendbutton').on('click', function() {
		socket.send($('#myMessage').val());
		$('#myMessage').val('');
	});

});
&lt;/script&gt;
&lt;ul id="messages"&gt;&lt;/ul&gt;
&lt;input type="text" id="myMessage"&gt;
&lt;button id="sendbutton"&gt;Send&lt;/button&gt;
&lt;/body&gt;
&lt;/html&gt;</t>
<t tx="yen.20170207092354.1">##利用 IPv6 網路傳輸設計檔案

&lt;pre class="brush: python"&gt;
import socket
from http.server import HTTPServer, SimpleHTTPRequestHandler

class MyHandler(SimpleHTTPRequestHandler):
  def do_GET(self):
    if self.path == '/ip':
      self.send_response(200)
      self.send_header('Content-type', 'text/html')
      self.end_headers()
      self.wfile.write('Your IP address is %s' % self.client_address[0])
      return
    else:
      return SimpleHTTPRequestHandler.do_GET(self)

class HTTPServerV6(HTTPServer):
  address_family = socket.AF_INET6

def main():
  server = HTTPServerV6(('::', 8080), MyHandler)
  server.serve_forever()

if __name__ == '__main__':
  main()
&lt;/pre&gt;


##電腦的多重處理

&lt;a href="http://www.davekuhlman.org/python_multiprocessing_01.html"&gt;http://www.davekuhlman.org/python_multiprocessing_01.html&lt;/a&gt;

xmlrpc server:

&lt;pre class="brush: python"&gt;
from xmlrpc.server import SimpleXMLRPCServer
from xmlrpc.server import SimpleXMLRPCRequestHandler

# Restrict to a particular path.
class RequestHandler(SimpleXMLRPCRequestHandler):
    rpc_paths = ('/RPC2',)

# Create server
with SimpleXMLRPCServer(("localhost", 8000),
                        requestHandler=RequestHandler) as server:
    server.register_introspection_functions()

    # Register pow() function; this will use the value of
    # pow.__name__ as the name, which is just 'pow'.
    server.register_function(pow)

    # Register a function under a different name
    def adder_function(x,y):
        return x + y
    server.register_function(adder_function, 'add')

    # Register an instance; all the methods of the instance are
    # published as XML-RPC methods (in this case, just 'mul').
    class MyFuncs:
        def mul(self, x, y):
            return x * y

    server.register_instance(MyFuncs())

    # Run the server's main loop
    server.serve_forever()
&lt;/pre&gt;

xmlrpc client:

&lt;pre class="brush: python"&gt;
import xmlrpc.client

s = xmlrpc.client.ServerProxy('http://localhost:8000')
print(s.pow(2,3))  # Returns 2**3 = 8
print(s.add(2,3))  # Returns 5
print(s.mul(5,2))  # Returns 5*2 = 10

# Print list of available methods
print(s.system.listMethods())
&lt;/pre&gt;

Another xmlrpc server:

&lt;pre class="brush: python"&gt;
import datetime

class ExampleService:
    def getData(self):
        return '42'

    class currentTime:
        @staticmethod
        def getCurrentTime():
            return datetime.datetime.now()

with SimpleXMLRPCServer(("localhost", 8000)) as server:
    server.register_function(pow)
    server.register_function(lambda x,y: x+y, 'add')
    server.register_instance(ExampleService(), allow_dotted_names=True)
    server.register_multicall_functions()
    print('Serving XML-RPC on localhost port 8000')
    try:
        server.serve_forever()
    except KeyboardInterrupt:
        print("\nKeyboard interrupt received, exiting.")
        sys.exit(0)
&lt;/pre&gt;

Another xmlrpc client:

&lt;pre class="brush: python"&gt;
import xmlrpc.client

server = xmlrpc.client.ServerProxy("http://localhost:8000")

try:
    print(server.currentTime.getCurrentTime())
except Error as v:
    print("ERROR", v)

multi = MultiCall(server)
multi.getData()
multi.pow(2,9)
multi.add(1,2)
try:
    for response in multi():
        print(response)
except Error as v:
    print("ERROR", v)
&lt;/pre&gt;

ssl xmlrpc:

&lt;pre class="brush: python"&gt;
"""Monkey patching standard xmlrpc.server.SimpleXMLRPCServer
to run over TLS (SSL)

Changes inspired on http://www.cs.technion.ac.il/~danken/SecureXMLRPCServer.py
"""
import socket
import socketserver
import ssl
from xmlrpc.server import SimpleXMLRPCServer, SimpleXMLRPCDispatcher, SimpleXMLRPCRequestHandler
try:
    import fcntl
except ImportError:
    fcntl = None


class SimpleXMLRPCServerTLS(SimpleXMLRPCServer):
    def __init__(self, addr, requestHandler=SimpleXMLRPCRequestHandler,
                 logRequests=True, allow_none=False, encoding=None, bind_and_activate=True):
        """Overriding __init__ method of the SimpleXMLRPCServer

        The method is an exact copy, except the TCPServer __init__
        call, which is rewritten using TLS
        """
        self.logRequests = logRequests

        SimpleXMLRPCDispatcher.__init__(self, allow_none, encoding)

        """This is the modified part. Original code was:

            socketserver.TCPServer.__init__(self, addr, requestHandler, bind_and_activate)

        which executed:

            def __init__(self, server_address, RequestHandlerClass, bind_and_activate=True):
                BaseServer.__init__(self, server_address, RequestHandlerClass)
                self.socket = socket.socket(self.address_family,
                                            self.socket_type)
                if bind_and_activate:
                    self.server_bind()
                    self.server_activate()

        """
        socketserver.BaseServer.__init__(self, addr, requestHandler)
        self.socket = ssl.wrap_socket(
            socket.socket(self.address_family, self.socket_type),
            server_side=True,
            certfile='cert.pem',
            cert_reqs=ssl.CERT_NONE,
            ssl_version=ssl.PROTOCOL_SSLv23,
            )
        if bind_and_activate:
            self.server_bind()
            self.server_activate()

        """End of modified part"""

        # [Bug #1222790] If possible, set close-on-exec flag; if a
        # method spawns a subprocess, the subprocess shouldn't have
        # the listening socket open.
        if fcntl is not None and hasattr(fcntl, 'FD_CLOEXEC'):
            flags = fcntl.fcntl(self.fileno(), fcntl.F_GETFD)
            flags |= fcntl.FD_CLOEXEC
            fcntl.fcntl(self.fileno(), fcntl.F_SETFD, flags)
&lt;/pre&gt;

 Server端
 
 
&lt;pre class="brush: python"&gt;
#Python 2
#import SimpleXMLRPCServer
#Python 3
import xmlrpc.server

host = "127.0.0.1"
port = 1234

def handle(msg):
    #Python 2
    #print "Handle message: " + msg
    #Python 3
    print("Handle message: " + msg)

    ret = "Hello! I have received your message."
    return ret

def main():
    #Python 2
    #server = SimpleXMLRPCServer.SimpleXMLRPCServer((host, port))
    #Python 3
    server = xmlrpc.server.SimpleXMLRPCServer((host, port))

    server.register_function(handle)
    server.serve_forever()

if __name__ == "__main__":
    main()
&lt;/pre&gt;

Client端:

&lt;pre class="brush: python"&gt;
#Python 2
#import xmlrpclib
#Python 3
import xmlrpc.client

host = "http://127.0.0.1:1234"

def main():
    #Python 2
    #server = xmlrpclib.ServerProxy(hots)
    #Python 3
    server = xmlrpc.client.ServerProxy(host)

    result = server.handle("Welcome.")

    #Python 2
    #print result
    #Python 3
    print(result)

if __name__ == "__main__":
    main()
&lt;/pre&gt;


有一些地方要注意：

    Python 2 和Python 3 的 xmlrpc library不同，範例裡有用註解表示Python 2的寫法。
    
    Python 2 和Python 3 的print也不同。
    
    SimpleXMLRPCServer() 的參數是 tuple 型態，host 要給字串，port 要給整數。
    
    server的host設定為127.0.0.1，client就只能連線到127.0.0.1；換句話說，server的host若設定成192.168.1.1，client即使在本機，也不能透過127.0.0.1連線，只能連線到192.168.1.1。
    
    client端呼叫一次server端的handle()，socket連線即結束；要再次呼叫的話，要再執行一次ServerProxy()。
    
    server端可以一次註冊多個function。
    
    serve_forever()要放在最後面呼叫，因為呼叫完即進入server的main routine。
    
&lt;a href="https://github.com/etopian/python3-xmlrpc-ssl-basic-auth"&gt;https://github.com/etopian/python3-xmlrpc-ssl-basic-auth&lt;/a&gt;

&lt;pre class="brush: python"&gt;
'''
Created on Jun 20, 2011

XMLRPC server to run over HTTPS

@author: mraposa
'''
import socket
import socketserver
import ssl
import pickle
import xmlrpc.client
from xmlrpc.server import SimpleXMLRPCServer, SimpleXMLRPCDispatcher, SimpleXMLRPCRequestHandler
try:
    import fcntl
except ImportError:
    fcntl = None

#    Easiest way to create the key file pair was to use OpenSSL -- http://openssl.org/ Windows binaries are available
#    You can create a self-signed certificate easily "openssl req -new -x509 -days 365 -nodes -out cert.pem -keyout privatekey.pem"
#    for more information --  http://docs.python.org/library/ssl.html#ssl-certificates
KEYFILE='c:\\delete\\privatekey.pem'    # Replace with your PEM formatted key file
CERTFILE='c:\\delete\\cert.pem'  # Replace with your PEM formatted certificate file

userPassDict = {"mraposa":"test123",
                "jsmith":"hellow"}
   
class SimpleXMLRPCServerTLS(SimpleXMLRPCServer):
    def __init__(self, addr, requestHandler=SimpleXMLRPCRequestHandler,
                 logRequests=True, allow_none=False, encoding=None, bind_and_activate=True):
        """Overriding __init__ method of the SimpleXMLRPCServer

        The method is an exact copy, except the TCPServer __init__
        call, which is rewritten using TLS
        """
        self.logRequests = logRequests

        SimpleXMLRPCDispatcher.__init__(self, allow_none, encoding)

        """This is the modified part. Original code was:

            socketserver.TCPServer.__init__(self, addr, requestHandler, bind_and_activate)

        which executed:

            def __init__(self, server_address, RequestHandlerClass, bind_and_activate=True):
                BaseServer.__init__(self, server_address, RequestHandlerClass)
                self.socket = socket.socket(self.address_family,
                                            self.socket_type)
                if bind_and_activate:
                    self.server_bind()
                    self.server_activate()

        """
        class VerifyingRequestHandler(SimpleXMLRPCRequestHandler):
            '''
            Request Handler that verifies username and password passed to
            XML RPC server in HTTP URL sent by client.
            '''
            # this is the method we must override
            def parse_request(self):
                # first, call the original implementation which returns
                # True if all OK so far
                if SimpleXMLRPCRequestHandler.parse_request(self):
                    # next we authenticate
                    if self.authenticate(self.headers):
                        return True
                    else:
                        # if authentication fails, tell the client
                        self.send_error(401, 'Authentication failed')
                return False
           
            def authenticate(self, headers):
                from base64 import b64decode
                #    Confirm that Authorization header is set to Basic
                (basic, _, encoded) = headers.get('Authorization').partition(' ')
                assert basic == 'Basic', 'Only basic authentication supported'
               
                #    Encoded portion of the header is a string
                #    Need to convert to bytestring
                encodedByteString = encoded.encode()
                #    Decode Base64 byte String to a decoded Byte String
                decodedBytes = b64decode(encodedByteString)
                #    Convert from byte string to a regular String
                decodedString = decodedBytes.decode()
                #    Get the username and password from the string
                (username, _, password) = decodedString.partition(':')
                #    Check that username and password match internal global dictionary
                if username in userPassDict:
                    if userPassDict[username] == password:
                        return True
                return False
       
        #    Override the normal socket methods with an SSL socket
        socketserver.BaseServer.__init__(self, addr, VerifyingRequestHandler)
        self.socket = ssl.wrap_socket(
            socket.socket(self.address_family, self.socket_type),
            server_side=True,
            keyfile=KEYFILE,
            certfile=CERTFILE,
            cert_reqs=ssl.CERT_NONE,
            ssl_version=ssl.PROTOCOL_SSLv23,
            )
        if bind_and_activate:
            self.server_bind()
            self.server_activate()

        """End of modified part"""

        # [Bug #1222790] If possible, set close-on-exec flag; if a
        # method spawns a subprocess, the subprocess shouldn't have
        # the listening socket open.
        if fcntl is not None and hasattr(fcntl, 'FD_CLOEXEC'):
            flags = fcntl.fcntl(self.fileno(), fcntl.F_GETFD)
            flags |= fcntl.FD_CLOEXEC
            fcntl.fcntl(self.fileno(), fcntl.F_SETFD, flags)

# Restrict to a particular path.
class RequestHandler(SimpleXMLRPCRequestHandler):
    rpc_paths = ('/RPC2',)

def executeRpcServer():
    # Create server
    server = SimpleXMLRPCServerTLS(("localhost", 443), requestHandler=RequestHandler)
    server.register_introspection_functions()

    # Register pow() function; this will use the value of
    # pow.__name__ as the name, which is just 'pow'.
    server.register_function(pow)

    # Register a function under a different name
    def adder_function(x,y):
        return x + y
    server.register_function(adder_function, 'add')

    # Register an instance; all the methods of the instance are
    # published as XML-RPC methods (in this case, just 'div').
    class MyFuncs:
        def div(self, x, y):
            return x // y
       
        def enterUID(self, uid):
            print (uid)
            return "Got uid " + uid
       
        #    For this test pickle function I am assuming the pickled object is just a list
        def uploadPickle(self, pickleStringBinary):
            #    Get the binary data from the pickled string
            pickleData = pickleStringBinary.data
            #    Unpickle the data into an object
            pickObject = pickle.loads(pickleData)
            #    Print the object to test
            print (pickObject[-1])
            #    Modify the object to test
            pickObject.append("Server got pickled object")
            #    Pickle the object. Protocol=2 is required to support Python v2 clients
            newPickleString = pickle.dumps(pickObject, protocol=2)
            #    Label the string binary and send it back to the XML client
            return xmlrpc.client.Binary(newPickleString)

    server.register_instance(MyFuncs())

    # Run the server's main loop
    print("Starting XML RPC Server")
    server.serve_forever()


if __name__ == '__main__':  
    executeRpcServer()

 

The client code would look something like this:

def xmlRpcClient(pickableObject):
    '''
    Connects to RPC server for HTTPs. This is simply a demo function to showcase
    what can be done.
    @param pickleString:
    '''

    import pickle
    import xmlrpclib

    #    Connects to server
    #    Can only connect over HTTPS with HTTPS server
    #    Server supports passing username and password
    s = xmlrpclib.ServerProxy('https://mraposa:test123@localhost:443')
    #     Runs various functions on the remote server
    print s.pow(2,3)  # Returns 2**3 = 8
    print s.add(2,3)  # Returns 5
    print s.div(5,2)  # Returns 5//2 = 2
   
    #    Uploads a pickable object to XML RPC server.
    #    First pickles the object into a string -- Uses protocol=2 to enforce Python 2 vs 3 compatibility
    #    Then send the string as a binary over XMLRPC. Sending a string results in conversion errors from
    #    Python 2 to 3
    #    Server returns a binary pickled object back
    pickleString = pickle.dumps(pickableObject, protocol=2)
    newPickleStringBinary = s.uploadPickle(xmlrpclib.Binary(pickleString))
   
    #    gets Binary data from returned results
    newPickleString = newPickleStringBinary.data
    #    Load the new pickle data into a new object
    newPickleObject = pickle.loads(newPickleString)
    print ("Client got object: " + newPickleObject[-1])

    # Print list of available methods
    print s.system.listMethods()
&lt;/pre&gt;

Python dokuwiki:

&lt;a href="https://github.com/fmenabe/python-dokuwiki"&gt;https://github.com/fmenabe/python-dokuwiki&lt;/a&gt;

Qpython:

&lt;a href="http://qpython.com/"&gt;http://qpython.com/&lt;/a&gt;

Kivy:

&lt;a href="https://kivy.org/#home"&gt;https://kivy.org/#home&lt;/a&gt;

##Asynchronous JavaScript and XML

Ajax for Brython:

&lt;a href="http://stackoverflow.com/questions/26021672/how-to-use-ajax-in-brython"&gt;http://stackoverflow.com/questions/26021672/how-to-use-ajax-in-brython&lt;/a&gt;

##Chat 工具

建立一個 chat 工具:

&lt;a href=""https://github.com/PrettyPrinted/flask-socketio-chat&gt;https://github.com/PrettyPrinted/flask-socketio-chat&lt;/a&gt;

&lt;a href="https://blog.miguelgrinberg.com/post/easy-websockets-with-flask-and-gevent"&gt;https://blog.miguelgrinberg.com/post/easy-websockets-with-flask-and-gevent&lt;/a&gt;

&lt;a href="https://github.com/callmephilip/chatzilla"&gt;https://github.com/callmephilip/chatzilla&lt;/a&gt;

##雲端空間

&lt;a href="https://www.heroku.com/pricing"&gt;https://www.heroku.com/pricing&lt;/a&gt;

#計算機程式課程回顧

##電腦基本知識

###電腦基本軟硬體設定

操作系統

網路設定

###近端與與遠端檔案管理

可攜程式環境

robodk based programming 

glowscript based simulation

brython based simulation

git 與 github

計算機程式課程的目的, 在利用 Leo Editor 與 Brython 導入 Python3 單機與網際程式環境, 讓學員能夠利用 Python3 程式語法管理機械設計資料, 並且利用網際程式進行基本的機械設計工程分析.

##管理機械設計資料

##機械設計工程分析

#電腦輔助設計實習課程回顧

電腦輔助設計實習課程的目的, 在銜接計算機程式課程, 利用 3D 參數繪圖與設計軟體, 進一步導入較為具像的產品設計內容, 其中包括產品零件的設計與繪圖, 產品機構的運動分析, 產品功能的展示等.

四連桿 - Solvespace - V-rep - arduino stepper motor control

八連桿 - Solvespace - V-rep - arduino stepper motor control

#協同產品設計實習

2D 齒輪組傳動囓合設計繪圖

3D 齒輪組傳動囓合設計繪圖

Onshape featurescript

電腦輔助設計實習課程的目的, 在銜接計算機程式與電腦輔助設計實習課程, 主要利用 Onshape 與 Github 讓學員進行分組同步與非同步產品開發實習.

##Onshape 同步協同

同步協同原理

同步協同優缺點

##Github 非同步協同

非同步協同原理

非同步協同優缺點

##協同設計題目: 機械計時器(?)

機械計時器 (mechanical clock) 協同設計 (Jupyterlab, solvespace 與 onshape)、模擬 (V-rep)與製作 (delta printer)

以機械傳動顯示計時器之秒、分與時數, 協同設計佔 30%, 模擬佔 30%, 製作佔 40%.

協同設計 - 協同性、創新性、實用性, 所有資料都必須以 Leo Editor, Pelican 網誌與 Reveal 簡報展示.

系統模擬 - 必須以 Solvespace + Onshape 設計零組件, 並在 V-rep 中模擬, 並且以 Jupyterlab 執行運算分析.

### 利用伺服器執行 Python3 程式

Jupyterhub: &lt;a href="https://8888.kmol.info:9443"&gt;https://8888.kmol.info:9443&lt;/a&gt;</t>
<t tx="yen.20170209024032.1">https://studywolf.wordpress.com/

https://github.com/studywolf/blog/tree/master/VREP

https://www.youtube.com/channel/UCiK0J5wtnyX2jP-AiGbdhjg

V-rep

http://www.cnblogs.com/21207-iHome/tag/V-rep/</t>
<t tx="yen.20170210153828.1">根據 http://www.coppeliarobotics.com/helpFiles/en/remoteApiServerSide.htm 中的說明.

V-rep 啟動時, 會根據系統目錄下的 remoteApiConnections.txt 檔案中的設定, 啟動  rempte api 功能:

// This file defines all the continuous remote API server services (started at remote API plugin initialization, i.e. V-REP start-up)
//
// Each remote API server service requires following 3 entries:
//
// portIndex@_port = xxxx               // where xxxx is the desired port number (below 19997 are preferred for server services starting at V-REP start-up)
// portIndex@_debug = xxxx              // where xxxx is true or false
// portIndex@_syncSimTrigger = xxxx     // where xxxx is true or false. When true, then the service will be pre-enabled for synchronous operation.
//
// In above strings, @ can be any number starting with 1. If more than one server service is required, then numbers need to be consecutive and starting with 1

// Let's start a continuous remote API server service on port 19997:
portIndex1_port             = 19997
portIndex1_debug            = false
portIndex1_syncSimTrigger   = true

若要自行加入 rempte api 執行的 port 則在 server 的 child script 中設定:

Server 端:

simExtRemoteApiStart(19999)

Client 端:

clientID = vrep.simxStart('127.0.0.1', 19999, True, True, 5000, 5)

import vrep
import sys
# child threaded script: 
# 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)

while True:
    choice = input("&gt;")
    if choice == "e":
        print("exiting")
        vrep.simxStopSimulation(clientID, vrep.simx_opmode_oneshot_wait)
        break
    elif choice == "p":
        vrep.simxPauseSimulation(clientID, vrep.simx_opmode_oneshot_wait)
    else:
        vrep.simxStartSimulation(clientID, vrep.simx_opmode_oneshot_wait)





</t>
<t tx="yen.20170210170248.1"># -*- coding: utf-8 -*-
try:
    import vrep
except:
    print ('--------------------------------------------------------------')
    print ('"vrep.py" could not be imported. This means very probably that')
    print ('either "vrep.py" or the remoteApi library could not be found.')
    print ('Make sure both are in the same folder as this file,')
    print ('or appropriately adjust the file "vrep.py"')
    print ('--------------------------------------------------------------')
    print ('')

import time
import sys
import ctypes

print ('Program started')
vrep.simxFinish(-1)
clientID=vrep.simxStart('127.0.0.1',19999,True,True,5000,5)

if clientID!=-1:
    print ('Connected to remote API server')
else:
    print ('Failed connecting to remote API server')
    sys.exit('Program Ended')

    
nominalLinearVelocity = 0.3
wheelRadius           = 0.027
interWheelDistance    = 0.119
    
res,objs=vrep.simxGetObjects(clientID, vrep.sim_handle_all,vrep.simx_opmode_blocking)
if res==vrep.simx_return_ok:
    print ('Number of objects in the scene: ',len(objs))
else:
    print ('Remote API function call returned with error code: ',res)

time.sleep(2)

startTime=time.time()
vrep.simxGetIntegerParameter(clientID,vrep.sim_intparam_mouse_x,vrep.simx_opmode_streaming)

res, display     = vrep.simxGetUIHandle(clientID, "sensorDisplay", vrep.simx_opmode_blocking)
res, leftSensor  = vrep.simxGetObjectHandle(clientID, "LeftSensor", vrep.simx_opmode_blocking)
res, middleSensor= vrep.simxGetObjectHandle(clientID, "MiddleSensor", vrep.simx_opmode_blocking)
res, rightSensor = vrep.simxGetObjectHandle(clientID, "RightSensor", vrep.simx_opmode_blocking)
res, leftJointDynamic  = vrep.simxGetObjectHandle(clientID, "DynamicLeftJoint" , vrep.simx_opmode_blocking)
res, rightJointDynamic = vrep.simxGetObjectHandle(clientID, "DynamicRightJoint", vrep.simx_opmode_blocking)

if res != vrep.simx_return_ok:
    print ('Failed to get sensor Handler')
    vrep.simxFinish(clientID)
    sys.exit('Program ended')

def setLeds(elHandle, left, middle, right):
    vrep.simxSetUIButtonProperty(clientID, elHandle,  8, 
        vrep.sim_buttonproperty_staydown, vrep.simx_opmode_oneshot)
    vrep.simxSetUIButtonProperty(clientID, elHandle, 16, 
        vrep.sim_buttonproperty_staydown, vrep.simx_opmode_oneshot)
    vrep.simxSetUIButtonProperty(clientID, elHandle, 24, 
        vrep.sim_buttonproperty_staydown, vrep.simx_opmode_oneshot)
    if left:
        vrep.simxSetUIButtonProperty(clientID, elHandle, 8, 
            vrep.sim_buttonproperty_staydown + vrep.sim_buttonproperty_isdown, vrep.simx_opmode_oneshot)
    if middle:
        vrep.simxSetUIButtonProperty(clientID, elHandle,16, 
            vrep.sim_buttonproperty_staydown + vrep.sim_buttonproperty_isdown, vrep.simx_opmode_oneshot)
    if right:
        vrep.simxSetUIButtonProperty(clientID, elHandle,24, 
            vrep.sim_buttonproperty_staydown + vrep.sim_buttonproperty_isdown, vrep.simx_opmode_oneshot)

sensorReading=[False, False, False]
sensorReading[0]=(vrep.simxReadVisionSensor(clientID, leftSensor,   vrep.simx_opmode_streaming )==1)
sensorReading[1]=(vrep.simxReadVisionSensor(clientID, middleSensor, vrep.simx_opmode_streaming )==1)
sensorReading[2]=(vrep.simxReadVisionSensor(clientID, rightSensor,  vrep.simx_opmode_streaming )==1)

while time.time() - startTime &lt; 50:
    returnCode,data=vrep.simxGetIntegerParameter(clientID,vrep.sim_intparam_mouse_x,vrep.simx_opmode_buffer) # Try to retrieve the streamed data
    
    # Read the sensors:

    sensorReading[0]=(vrep.simxReadVisionSensor(clientID, leftSensor,   vrep.simx_opmode_buffer)[1])
    sensorReading[1]=(vrep.simxReadVisionSensor(clientID, middleSensor, vrep.simx_opmode_buffer)[1])
    sensorReading[2]=(vrep.simxReadVisionSensor(clientID, rightSensor,  vrep.simx_opmode_buffer)[1])
    
    setLeds(display,sensorReading[0],sensorReading[1],sensorReading[2])

    # Decide about left and right velocities:
    s = 1.0
    linearVelocityLeft  = nominalLinearVelocity * s
    linearVelocityRight = nominalLinearVelocity * s

    if not sensorReading[0]:
        linearVelocityLeft  = linearVelocityLeft*0.3
    if not sensorReading[2]:
        linearVelocityRight = linearVelocityRight*0.3

    vrep.simxSetJointTargetVelocity(clientID, leftJointDynamic, linearVelocityLeft/(s*wheelRadius), vrep.simx_opmode_oneshot)
    vrep.simxSetJointTargetVelocity(clientID, rightJointDynamic,linearVelocityRight/(s*wheelRadius), vrep.simx_opmode_oneshot)
    
    time.sleep(0.005)</t>
<t tx="yen.20170210172100.1"># -*- coding: utf-8 -*-
# http://www.cnblogs.com/21207-iHome/p/5955535.html
import vrep             # V-rep library
import sys      
import time
import math  

# This function will convert an angle to the equivalent rotation in the range [-pi,pi]
def ConfineAngle(angle):
    angle = angle % (2.0 * math.pi)
    if( angle &lt; -math.pi ):
        angle += (2.0 * math.pi)
    if( angle &gt; math.pi ):
        angle -= (2.0 * math.pi)
    return angle


def CalcIK():
    id = linkNum - 1
    while id &gt;= 0:
        retcode, J_pos = vrep.simxGetObjectPosition(clientID,joint_handle[id],-1,vrep.simx_opmode_oneshot_wait)
        retcode, tip = vrep.simxGetObjectPosition(clientID,tip_handle, -1, vrep.simx_opmode_oneshot_wait)
        
        # Get the vector from the current bone to the end effector position.
        curToEndX = tip[0] - J_pos[0]
        curToEndY = tip[1] - J_pos[1]
        curToEndMag = math.sqrt( curToEndX*curToEndX + curToEndY*curToEndY )
          
        # Get the vector from the current bone to the target position.
        curToTargetX = target[0] - J_pos[0];
        curToTargetY = target[1] - J_pos[1];
        curToTargetMag = math.sqrt(curToTargetX*curToTargetX+curToTargetY*curToTargetY)
          
        # Get rotation 
        endTargetMag = curToEndMag*curToTargetMag
        if endTargetMag &lt;= 0.0001:    # prevent division by small numbers
            cosRotAng = 1
            sinRotAng = 0
        else:
            cosRotAng = (curToEndX*curToTargetX + curToEndY*curToTargetY) / endTargetMag
            sinRotAng = (curToEndX*curToTargetY - curToEndY*curToTargetX) / endTargetMag
        
        # Clamp the cosine into range when computing the angle(might be out of rangedue to floating point error)
        rotAng = math.acos(max(-1, min(1,cosRotAng)))
        if  sinRotAng &lt; 0.0:
            rotAng = -rotAng
                
        q[id] = q[id] + rotAng
        
        # Rotate the current link
        if(id == 0):
            vrep.simxSetJointPosition(clientID,joint_handle[id], ConfineAngle(q[id])+math.pi/2, vrep.simx_opmode_oneshot)
        else:
            vrep.simxSetJointPosition(clientID,joint_handle[id], ConfineAngle(q[id]), vrep.simx_opmode_oneshot)
        
        # Check for termination
        retcode, tip = vrep.simxGetObjectPosition(clientID,tip_handle, -1, vrep.simx_opmode_oneshot_wait)
        endToTargetX = (target[0] - tip[0])
        endToTargetY = (target[1] - tip[1])
        error = math.sqrt(endToTargetX*endToTargetX + endToTargetY*endToTargetY)
        if( error &lt;= stol ):
            # We found a valid solution.
            return 1, error
        id = id - 1
        
    return 0, error  # cannot get to the target in this iteration
    
    
        
if __name__ == "__main__":
    # Starts a communication thread with the server
    clientID = vrep.simxStart('127.0.0.1', 20001, True, True, 5000, 5)
    
    # clientID: the client ID, or -1 if the connection to the server was not possible
    if clientID != -1:  #check if client connection successful
        print 'Connected to remote API server'
    else:
        print 'Connection not successful'
        sys.exit('Could not connect')    # Exit from Python


    # Retrieves an object handle based on its name.
    errorCode,tip_handle = vrep.simxGetObjectHandle(clientID,'tip',vrep.simx_opmode_oneshot_wait)
    errorCode,target_handle = vrep.simxGetObjectHandle(clientID,'target',vrep.simx_opmode_oneshot_wait)
    errorCode,consoleHandle = vrep.simxAuxiliaryConsoleOpen(clientID,'info',4,1+4,None,None,None,None,vrep.simx_opmode_oneshot_wait)
    joint_handle = [-1,-1,-1]    # store the joint handles
    for i in range(3):
        errorCode,joint_handle[i] = vrep.simxGetObjectHandle(clientID,'j'+str(i+1),vrep.simx_opmode_oneshot_wait)

    ilimit = 100    # maximum iteration
    stol = 1e-2     # tolerance
    q = [0,0,0]     # initial joint value
    linkNum = 3     # number of links
    
    retcode, target = vrep.simxGetObjectPosition(clientID,target_handle, -1, vrep.simx_opmode_oneshot_wait)
    retcode, tip = vrep.simxGetObjectPosition(clientID,tip_handle, -1, vrep.simx_opmode_oneshot_wait)
    
    count = 0    
    isOK = 0
    while ( not isOK ):    
        isOK,err = CalcIK()
        
        vrep.simxAuxiliaryConsolePrint(clientID,consoleHandle,None,vrep.simx_opmode_oneshot_wait) 
        count = count + 1
        vrep.simxAuxiliaryConsolePrint(clientID,consoleHandle,str(count)+' iterations err:'+str(err),vrep.simx_opmode_oneshot_wait)   
        
        if count &gt; ilimit:
            vrep.simxAuxiliaryConsolePrint(clientID,consoleHandle,"Solution wouldn't converge\r\n",vrep.simx_opmode_oneshot_wait)
            break
        #time.sleep(0.1)
    
    # Ends the communication thread. This should be the very last remote API function called on the client side
    vrep.simxFinish(clientID)</t>
<t tx="yen.20170210202015.1">simxCloseScene
simxCopyPasteObjects
simxCreateDummy
simxDisplayDialog
simxEndDialog 
simxEraseFile
simxFinish
simxGetArrayParameter
</t>
<t tx="yen.20170210221519.1">import vrep
import sys
import time

print('Program started')

portNb = 0
leftMotorHandle = 0
rightMotorHandle = 0
sensorHandle = 0

if len(sys.argv) &gt;= 5:
    portNb = int(sys.argv[1])
    leftMotorHandle = int(sys.argv[2])
    rightMotorHandle = int(sys.argv[3])
    sensorHandle = int(sys.argv[4])
else:
    print("Indicate following arguments: 'portNumber leftMotorHandle rightMotorHandle sensorHandle'")
    time.sleep(5000.0 / 1000.0)
    sys.exit(0)

vrep.simxFinish(-1) # just in case, close all opened connections
clientID = vrep.simxStart('127.0.0.1', portNb, True, True, 2000, 5)
if clientID != -1:
    print 'Connected to remote API server'
    driveBackStartTime = -99000
    motorSpeeds = [0, 0]

    while vrep.simxGetConnectionId(clientID) != -1:
        (errorCode, detectionState, detectedPoint, detectedObjectHandle, detectedSurfaceNormalVector) = vrep.simxReadProximitySensor(clientID, sensorHandle, vrep.simx_opmode_streaming)
        if errorCode == vrep.simx_return_ok:
            simulationTime = vrep.simxGetLastCmdTime(clientID)
            if simulationTime - driveBackStartTime &lt; 3000:
                motorSpeeds[0] = -3.1415 * 0.5
                motorSpeeds[1] = -3.1415 * 0.25
            else:
                motorSpeeds[0] = 3.1415
                motorSpeeds[1] = 3.1415
                if detectionState:
                    driveBackStartTime = simulationTime

            errorCode = vrep.simxSetJointTargetVelocity(clientID, leftMotorHandle, motorSpeeds[0], vrep.simx_opmode_oneshot)
            vrep.simxSetJointTargetVelocity(clientID, rightMotorHandle, motorSpeeds[1], vrep.simx_opmode_oneshot)
            if errorCode != vrep.simx_return_ok:
                print("SetJointTargetVelocity got error code: %s" % errorCode)

        else:
            print("ReadProximitySensor got error code: %s" % errorCode)

        time.sleep(5.0 / 1000.0)

    vrep.simxFinish(clientID)
else:
    print('Failed connecting to remote API server')
print('Program ended')</t>
<t tx="yen.20170210222733.1">##==============================================================#
## SECTION: Imports                                             #
##==============================================================#

import vrep

##==============================================================#
## SECTION: Class Definitions                                   #
##==============================================================#

class Robot:
    def __init__(self, client_id, opmode):
        self.cid = client_id
        self.op = opmode

        # Setup wheel joints.
        self.wj_locs = ["Left","Right"]
        self.wjs = {}
        for loc in self.wj_locs:
            name = "Dynamic{0}Joint".format(loc)
            _,h = vrep.simxGetObjectHandle(client_id, name, opmode)
            self.wjs[loc] = h

        # Setup vision sensors.
        self.vs_locs = ["Left","Middle","Right"]
        self.vss = {}
        for loc in self.vs_locs:
            name = "{0}Sensor".format(loc)
            _,h = vrep.simxGetObjectHandle(client_id, name, opmode)
            self.vss[loc] = h

    def set_wheel_vel(self, left, right):
        """Sets the wheel target velocities."""
        vrep.simxSetJointTargetVelocity(self.cid, self.wjs['Left'], left, self.op)
        vrep.simxSetJointTargetVelocity(self.cid, self.wjs['Right'], right, self.op)

    def get_wheel_vel(self):
        """Returns the wheel velocities as a list of (left,right)."""
        vels = []
        for loc in self.wj_locs:
            _,vel = vrep.simxGetObjectFloatParameter(self.cid, self.wjs[loc], vrep.sim_jointfloatparam_velocity, self.op)
            vels.append(vel)
        return vels

    def get_vis_sensors(self):
        """Returns a list of lists containing the average red/green/blue value
        from the left/middle/right vision sensor."""
        aves = []
        for loc in self.vs_locs:
            h = self.vss[loc]
            _,_,pkt = vrep.simxReadVisionSensor(client_id, h, opmode)
            aves.append(pkt[0][11:14])
        return aves

##==============================================================#
## SECTION: Function Definitions                                #
##==============================================================#

def is_green(a):
    """Returns true if the reading from Robot.get_vis_sensors() is green."""
    return (a[0] &lt; 0.4 and a[2] &lt; 0.4) and (a[1] &gt; 0.5)

##==============================================================#
## SECTION: Main Body                                           #
##==============================================================#

if __name__ == '__main__':
    vrep.simxFinish(-1) # Stop any running simulation.
    client_id = vrep.simxStart("127.0.0.1", 19997, True, True, 5000, 5)
    if client_id == -1:
        print("Failed to connect.")
        exit()
    print("Connected to V-REP.")
    print("Running robot logic, will exit when simulation is ended...")
    try:
        opmode = vrep.simx_opmode_blocking
        vrep.simxStartSimulation(client_id, opmode)
        robot = Robot(client_id, opmode)
        robot.set_wheel_vel(1.0, 1.0)
        vrep.simxSynchronousTrigger(client_id)
        while True:
            # Very simple robot line following logic.
            l,m,r = robot.get_vis_sensors()
            if is_green(m):
                robot.set_wheel_vel(1.0, 1.0)
            elif is_green(l):
                robot.set_wheel_vel(0.2, 1.0)
            elif is_green(r):
                robot.set_wheel_vel(1.0, 0.2)
            vrep.simxSynchronousTrigger(client_id)
    except:
        vrep.simxFinish(client_id)
        print("Simulation ended.")
</t>
<t tx="yen.20170215103217.1"></t>
<t tx="yen.20170215103228.1"></t>
</tnodes>
</leo_file>
